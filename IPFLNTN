0102 IF X0$<>"A" THEN LET F0=1,F$="IPDFLN"+STBL("CID"); GOSUB GENOPEN; REM I.D. 
0105 LET F0=6,F$="IPLG"+STBL("CID"); GOSUB GENOPEN; REM LOG BOOK
0110 LET F0=80,F$="IPFLEN"+STBL("CID"); GOSUB GENOPEN; REM Flower Entry
0115 LET F0=81,F$="IPFLFL"; GOSUB GENOPEN; REM Flower Code F/M
0120 LET F0=82,F$="IPFLFM"; GOSUB GENOPEN; REM Farm Code F/M
0125 LET F0=50,F$="ARCU"+STBL("CID"); GOSUB GENOPEN; REM CUSTOMER
0130 LET F0=8,F$="IPDFLN"+STBL("CID"); GOSUB GENOPEN; REM  ACE Imm. Delivery
0135 LET F0=11,F$="IPAWB"+STBL("CID"); GOSUB GENOPEN; REM BL/AWB File
0140 LET F0=64,F$="IPCNT1"; GOSUB GENOPEN; REM Country
0145 LET F0=84,F$="IPFLFL2"; GOSUB GENOPEN; REM Flower Prices
0147 LET F0=86,F$="IPDFLED"+STBL("CID"); GOSUB GENOPEN; REM COMMERCIAL ENTITIES
0150 LET F0=40,F$="RMTB"; GOSUB GENOPEN
0155 IF O2$(100,1)="1" THEN LET F0=53,F$=STBL("SAMPLE")+"IPHTF.NEW"; GOSUB GENOPEN ELSE LET F0=53,F$=STBL("SAMPLE")+"IPHTF"; GOSUB GENOPEN FI; LET TARCH1=FILE[53]
0160 LET F0=10,F$="IPINV"+STBL("CID"); GOSUB GENOPEN; REM *** Entry Invoice 
0170 LET F0=46,F$="IPTB"; GOSUB GENOPEN; REM IMPORT TABLES
0200 REM 200,5*********** VARIABLE INITIALIZATION **************
0205 IF X0$<>"A" THEN GOTO 0215
0210 LET EFF_DATE=L4[3],ED_IND=1; IF L4[2]<>0 AND POS(L1$(13,2)="02073238",2)=0 THEN LET EFF_DATE=L4[2],ED_IND=2
0215 CALL "GENCOSP.PUB",1,OK
0220 IF OK=0 THEN RUN "RMDIR",ERR=9990
0225 LET M1$="000000",M2$="##0",M3$="000.0000",M3_SEQ$="000",M4$="###########",M5$="00",MD$="  /  /    ",M6$="######.00",M7$="000",M27$="#######0.00",M11_INV_VAL$="########.00",NEW_M4$="########",M13$="#,###,###,###.00"
0230 LET M10$="#######.00",NEW_M5$="0000"
0235 LET MESS1$="<< Code not in Country/Port File >>"
0240 READ (FILE[40],KEY="IETBL"+STBL("CID")+FILL(3-LEN(STBL("CID"))),DOM=0275)IOL=XXTB
0245 IF T3$(238,1)<>FILL(1) THEN LET CDTCODE$=T3$(238,1) ELSE LET CDTCODE$="C"
0250 LET KEEP_FLOW_ENT$=T3$(239,1); IF GUI THEN IF KEEP_FLOW_ENT$="Y" THEN PRINT (OSGUI.CHAN)'ENABLE'(4060) ELSE PRINT (OSGUI.CHAN)'DISABLE'(4060) FI; GOSUB CLEAR_GLOBAL
0255 REM LET KEEP_FLOW_ENT$="N"; REM ***
0260 LET MULTIPLE_FARMS$=T3$(237,1); REM LET MULTIPLE_FARMS$="N"
0265 IF MULTIPLE_FARMS$="Y" THEN IF GUI=0 THEN PRINT @(11,7),"Farm #" ELSE PRINT (OSGUI.CHAN)'SHOW'(1095,4075); GOSUB CLEAR_GLOBAL
0270 GOTO 0280
0275 LET X9$="<< Table 'IETBL"+STBL("CID")+"' not set up in RMTB >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 9990
0280 READ (FILE[46],KEY="MISC"+FILL(4),DOM=0300)IOL=XXTB
0285 LET ACE_MULTI_CONSG$=T3$(87,1),ACE_SINGLE_CONSG_INV$=T3$(88,1),ACE_MULTI_MFG$=T3$(89,1),ACE_MULTI_ENTI$=T3$(90,1)
0300 REM 300 ******** FUNCTION DEFINITION **********************
0310 DEF FNE(D$)=LEN(D$)=0 OR D$=FILL(LEN(D$))
0320 DEF FND$(D)=DATE(D:STBL("DATEMASK"))
0899 REM 0 - (FIL) 0899-0999 *********************************
0910 IPLGX: IOLIST L0$,L1$,L2$,L1[ALL],L2[ALL],L3[ALL],L4[ALL],L5[ALL]
0920 IPINVX: IOLIST Y0$,Y1$,Y1[ALL],Y2$,YADJ,YROE
0930 IPFLENX: IOLIST D0$,D1$,D[ALL],D2$,D3[ALL]
0931 IPCNT1: IOLIST R10$,R11$,R12$,R13[ALL]
0940 IPFLFL: IOLIST F0$,F1$
0950 IPFLFM: IOLIST G0$,G1$,G2$,G1[ALL],G2[ALL],G3[ALL],G4[ALL]
0960 IPHTF: IOLIST T0$,T1$,T1[ALL],T2[ALL]
0980 IPDFLNX: IOLIST I0$,I1$,I2$,I3$,I4$,I5$,I6$,I7[ALL],I8$,I9[ALL],I10[ALL]
0985 M_IPAWBX: IOLIST M_AB0$,M_AB1$
0987 H_IPAWBX: IOLIST H_AB0$,H_AB1$
0988 IPAWBX: IOLIST AB0$,AB1$
0990 ARCUX: IOLIST C0$,C1$
0995 IPFLFL2: IOLIST FC0$,FC[ALL]
0998 XXTB: IOLIST T0$,T1,T1$,T2$,T3$
1000 REM 1000,5 ************ DATA ENTRY CONTROL *******************
1005 TOT_INV_VAL=0,TOT_BOXES=0,TOT_UNITS=0
1010 LET ADDT=0,DEF_MAWB$=""; DIM T1[9],T2[1]
1015 LET CURRKEY$="",YDISABLE$="",OLD_YDISABLE$="",WIND=0,DELET=0,FUN_F3$=""
1020 IF GUI THEN GOSUB SETUP; LET Y$="",GUI_ID=7000,LN[0]=-1; GOSUB GENLINE
1025 IF GUI THEN GOSUB DISABLE_FIELDS
1030 LET CURRKEY$=""
1035 GOSUB MAIN_LOGIC; REM (1780)
1040 IF NEXT_INV$="Y" THEN LET CODE$=D0$(1,11); GOSUB 1070 ELSE LET CODE$=D0$(1,11); GOSUB LOADDATA
1045 IF MULTIPLE_FARMS$="Y" AND NEXT_INV$="Y" AND REC_YES$="N" THEN GOSUB 2400; REM Farm Seq. # GENINPUT
1050 LET REC_YES$=FILL(1),NEXT_INV$=FILL(1),D0$(1,11)=CODE$,FUN_F3$=""; GOTO CONTROL
1055 REM ****** Load Data ************
1060 LOADDATA: 
1065 REM IF MULTIPLE_FARMS$="Y" AND REC_YES$="N" THEN GOTO 1065
1070 GOSUB SETUP
1075 LET FUN_F3$=""
1080 GOSUB BUILD
1085 IF LN[9]=0 THEN IF DELET THEN LET DELET=0,Y$="X"; GOTO 8452 ELSE LET TASK$="A",D0$(12,4)="0001"; GOTO 2815
1090 RETURN
1095 REM  ******* Initialize LN and LOC Values ***********
1100 SETUP: 
1105 DIM LN[12],LOC[5]; DIM GUI_LN[1:8,1:2]
1115 REM LET GUI_LN[1,1]=3,GUI_LN[2,1]=10,GUI_LN[3,1]=15,GUI_LN[4,1]=39,GUI_LN[5,1]=49,GUI_LN[6,1]=60,GUI_LN[7,1]=66,GUI_LN[8,1]=75; LET GUI_LN[5,2]=1,GUI_LN[6,2]=1,GUI_LN[7,2]=2,GUI_LN[8,2]=1
1117 LET GUI_LN[1,1]=5,GUI_LN[2,1]=10,GUI_LN[3,1]=15,GUI_LN[4,1]=39,GUI_LN[5,1]=48,GUI_LN[6,1]=58,GUI_LN[7,1]=60,GUI_LN[8,1]=75; LET GUI_LN[5,2]=1,GUI_LN[6,2]=1,GUI_LN[7,2]=2,GUI_LN[8,2]=1
1120 LET LN[0]=1,LN[1]=3,LN[2]=9,LN[3]=1,LN[4]=2,LN[5]=10,LN[6]=INT(LN[2]/LN[3]),LN[7]=1,LN[8]=1,LN[9]=0,LN[10]=99,LN[11]=20,LN[12]=75
1125 DIM LN$[1:LN[6],LN[3]-1]
1130 LET ACT$=" ",MASK$="000000"
1135 LET LOC[0]=1,LOC[1]=LN[7],LOC[2]=LN[8],LOC[3]=1,LOC[4]=1
1140 SETUP2: LET LOC[1]=999999,LOC[2]=999,LOC[3]=9999999
1145 RETURN
1150 REM ****************** Control ********************************
1155 CONTROL: 
1160 LET ML1=0,ML2=0,GT$="",Y$="",GOTO_FLAG=0
1165 GOSUB FIRSTKEY; GOSUB LASTKEY; IF LN[9]=LN[6] THEN IF LN$[1,0](76)<>FIRSTKEY$ OR LN$[LN[6],0](76)<>LASTKEY$ THEN LET GT$='SF'+",G=Goto Line ",ML2=ML2+14,GOTO_FLAG=1
1170 IF MULTIPLE_FARMS$="Y" THEN LET MF$='SF'+",F=Next Farm",ML2=ML2+12
1175 LET MSG2$='SF'+"A=Append,C=Change,N=Next Inv.,T=Transfer,E=Exit"+GT$+MF$; LET ML2=ML2+48
1180 LET MSG1$='SF'+""+'SB'; LET ML1=ML1+60
1185 IF GUI THEN IF GOTO_FLAG THEN PRINT (OSGUI.CHAN)'ENABLE'(9050) ELSE PRINT (OSGUI.CHAN)'DISABLE'(9050)
1190 GOSUB DISMSG
1195 SUBCONTROL: 
1200 LET GUI_ID=7000,FUN_F3$="N",INV_F3$="N"
1205 GOSUB CALC_DISP_TOTALS; REM (6900)
1207 GOSUB CALC_DISP_TOT_BOXES; REM (7000)
1210 IF WIND=0 THEN LET TASK$="",ABORT=0
1215 IF WIND THEN LET LN[0]=2
1220 LET ML1=0,ML2=0,GT$="",Y$=""; IF LN[9]=LN[6] THEN IF LN$[1,0](76)<>FIRSTKEY$ OR LN$[LN[6],0](76)<>LASTKEY$ THEN LET GT$='SF'+",G=Goto Line ",ML2=ML2+14,GOTO_FLAG=1
1225 IF MULTIPLE_FARMS$="Y" THEN LET MF$='SF'+",F=Next Farm",ML2=ML2+12
1230 LET MSG2$='SF'+"A=Append,C=Change,N=Next Inv.,R=Reference,E=Exit"+GT$+MF$; LET ML2=ML2+49
1235 LET MSG1$='SF'+""+'SB'; LET ML1=ML1+60
1240 IF GUI THEN IF GOTO_FLAG THEN PRINT (OSGUI.CHAN)'ENABLE'(9050) ELSE PRINT (OSGUI.CHAN)'DISABLE'(9050)
1245 IF GUI THEN IF MULTIPLE_FARMS$="Y" THEN PRINT (OSGUI.CHAN)'ENABLE'(9060) ELSE PRINT (OSGUI.CHAN)'DISABLE'(9060)
1250 GOSUB DISMSG
1255 GOSUB GENLINE; IF WIND THEN LET LN[0]=1; GOTO 2065 FI; GOSUB SETUP2
1260 IF LEN(TASK$)<2 THEN GOTO 1275
1265 LET POSZ=POS(TASK$="LDLUPDPUENHO",2); IF POSZ>1 THEN LET POSZ=(POSZ+1)/2
1270 ON POSZ GOTO 1275,LINEDOWN,LINEUP,PAGEDOWN,PAGEUP,GOTOEND,HOME,1280
1275 IF TASK$=" " THEN LET TASK$="A"
1280 ON POS(TASK$="ACNTEGF") GOTO 1285,APPEND,EDLINE,NEXT_INVOICE,XFER,QUIT,GOTOLINE,NEXT_FARM
1285 LET TASK$=""
1290 GOTO 1210
1295 REM ***********  Line Down *****************************************
1300 LINEDOWN: 
1305 GOSUB CURRKEY; GOSUB LASTKEY
1310 IF CURRKEY$>=LASTKEY$ THEN GOTO 1340
1315 READ (FILE[80],KEY=CURRKEY$)
1320 READ (FILE[80],ERR=1340)IOL=IPFLENX
1325 FOR LINE=1 TO LN[6]-1; LET LN$[LINE,0]=LN$[LINE+1,0]; NEXT LINE
1330 LET LINE=LN[6]; GOSUB BUILDLINE
1335 LET LN[0]=1
1340 GOSUB SETUP2
1345 GOTO SUBCONTROL
1350 REM ****************  Line Up **************************************
1355 LINEUP: 
1360 GOSUB CURRKEY; GOSUB FIRSTKEY
1365 IF CURRKEY$=FIRSTKEY$ THEN GOTO 1405
1370 EXTRACT (FILE[80],KEY=CURRKEY$,ERR=GENERROR)
1375 LET K$=KEYP(FILE[80],END=1405,ERR=GENERROR)
1380 READ (FILE[80],KEY=K$,ERR=GENERROR)IOL=IPFLENX
1385 FOR LINE=LN[6]-1 TO 1 STEP -1; LET LN$[LINE+1,0]=LN$[LINE,0]; NEXT LINE
1390 LET LINE=1; GOSUB BUILDLINE
1395 IF LN[9]<LN[6] THEN LET LN[9]=LN[9]+1
1400 LET LN[0]=1
1405 GOTO SUBCONTROL
1410 REM *************** Page Down *************************************
1415 PAGEDOWN: 
1420 GOSUB LASTKEY
1425 IF LN$[LN[9],0](LN[12]+1)>=LASTKEY$ THEN LET LN[8]=LN[9]; GOTO 1450
1430 READ (FILE[80],KEY=LN$[LN[9],0](76),ERR=GENERROR)
1435 LET K$=KEY(FILE[80],END=1450),STARTKEY$=K$(12)
1440 GOSUB BUILD
1445 LET LN[8]=MIN(LN[8],LN[9])
1450 GOSUB SETUP2
1455 GOTO SUBCONTROL
1460 REM ************** Page Up ****************************************
1465 PAGEUP: 
1470 IF LN$[1,0](LN[12]+1)<=FIRSTKEY$ THEN LET LN[8]=1; GOTO SUBCONTROL
1475 GOSUB FINDKEY
1480 GOSUB BUILD
1485 LET LN[8]=MIN(LN[8],LN[9])
1490 LET LN[0]=1,LN[7]=1; REM "set array"
1495 GOTO SUBCONTROL
1500 REM "-----  Goto End"
1505 GOTOEND: 
1510 GOSUB FIRSTKEY; GOSUB LASTKEY
1515 IF LEN(LN$[LN[6],0])>76 THEN IF LN$[LN[6],0](76)>=LASTKEY$ THEN LET LN[8]=LN[9]; GOTO 1540
1520 IF LN$[1,0](76)=FIRSTKEY$ AND LN$[LN[9],0](76)=LASTKEY$ THEN GOTO 1535
1525 GOSUB FINDKEY; REM "find key to start with"
1530 GOSUB BUILD
1535 LET LN[0]=1,LN[7]=1,LN[8]=MIN(LN[6],LN[9])
1540 GOSUB SETUP2
1545 GOTO SUBCONTROL
1550 REM ******************* Goto Home ****************************
1555 HOME: 
1560 GOSUB FIRSTKEY; IF LN$[1,0](LN[12]+1)<=FIRSTKEY$ THEN GOTO 1575
1565 LET STARTKEY$=FILL(4)
1570 GOSUB BUILD
1575 LET LN[0]=1,LN[7]=1,LN[8]=1; REM "  set array"
1580 GOTO SUBCONTROL
1585 REM ******************** Goto a specific line ************************
1590 GOTOLINE: 
1595 GOSUB FIRSTKEY; GOSUB LASTKEY
1600 IF LN$[1,0](LN[12]+1)=FIRSTKEY$ AND LN$[LN[9],0](LN[12]+1)=LASTKEY$ THEN GOTO SUBCONTROL
1605 LET FOLLOW=LN[5]+LN[8]-2
1610 LET X0=1,X1=17,X3=1,X1$="0000",X4=LEN(X1$),X=0,X9=1,STARTX=10,STARTY=FOLLOW,PROMPTS$="Go To Line:",TEXT_COLOR=2
1615 CALL "GENGOTO.PUB",Y$,STARTX,STARTY,X2,X3,X4,X9,X1$,X,X$,WINDID$,SELVAL$,COMPID$,FILE[ALL],YDISABLE$,PGM$,FLD_HLP$,OSGUI$,BUTTON_KEYS$[ALL],PROMPTS$,TEXT_COLOR
1620 ON POS(Y$="XMP") GOTO 1625,8454,9990,8454
1625 LET X$=STR(X:X1$)
1630 IF X$>LASTKEY$(12) OR CVS(X$,2)="" THEN GOTO SUBCONTROL
1635 LET LN[7]=1,LN[8]=1
1640 LET STARTKEY$=X$; GOSUB BUILD
1645 GOTO SUBCONTROL
1650 EXITWIND: 
1655 LET Y$=""
1660 GOTO CONTROL
1665 REM   *****  Build Display Array"
1670 BUILD: 
1675 TOT_INV_VAL=0,TOT_BOXES=0,TOT_UNITS=0
1680 LET LN[9]=0
1685 DIM LN$[1:LN[6],LN[3]-1]
1690 LET KEY$=CODE$+STARTKEY$
1695 READ (FILE[80],KEY=KEY$,DOM=1705,END=1745,ERR=GENERROR)IOL=IPFLENX
1700 GOTO 1710
1705 READ (FILE[80],END=1745,ERR=GENERROR)IOL=IPFLENX
1710 IF D0$(1,11)<>CODE$ THEN GOTO 1745
1715 IF D1$(6,3)="   " AND D0$(12,4)="0001" THEN GOTO 1745; REM Chk if the first Seq. for the Farm & no Boxes
1717 IF D0$(10,6)="010001" THEN LET SAVE_HOUSE$=D1$(30,16) ELSE IF D1$(30,16)<>SAVE_HOUSE$ THEN LET D1$(30,16)=SAVE_HOUSE$; WRITE (FILE[80])IOL=IPFLENX; REM This is so that the rest of the Detail Rec's will have the same House No., if it was changed at some point.
1718 IF D0$(10,6)="010001" THEN LET SAVE_FARM$=D1$(1,5) ELSE IF D1$(1,5)<>SAVE_FARM$ THEN LET D1$(1,5)=SAVE_FARM$; WRITE (FILE[80])IOL=IPFLENX; REM This is so that the rest of the Detail Rec's will have the same Farm ID., if it was changed at some point.
1719 IF D0$(10,6)="010001" THEN LET SAVE_CONSIG$=D2$(1,6) ELSE IF D2$(1,6)<>SAVE_CONSIG$ THEN LET D2$(1,6)=SAVE_CONSIG$; WRITE (FILE[80])IOL=IPFLENX; REM This is so that the rest of the Detail Rec's will have the same Consignee, if it was changed at some point.
1720 LET LN[9]=LN[9]+1
1725 IF D0$(12,4)="0001" THEN LET BOX_TYPE$=D1$(11,1)
1730 LET LINE=LN[9]; GOSUB BUILDLINE
1735 IF LN[9]>=LN[6] THEN GOTO 1745
1740 GOTO 1705
1745 LET LN[0]=1,STARTKEY$=""
1750 GOSUB CLEANUP
1755 REM LET TOT_INV_VAL$=FNNUM$(TOT_INV_VAL,M13$)
1760 REM IF GUI THEN PRINT (OSGUI.CHAN)'TITLE'(2030,TOT_INV_VAL$)
1762 GOSUB CALC_DISP_TOTALS; REM (6900)
1765 RETURN
1770 REM ******************  Build a Line ********************************
1775 BUILDLINE: 
1780 REM LET UNITS$=STR(D[1]:NEW_M4$),PRICE$=STR(D[0]:M3$),BOX_NUM=NUM(D1$(6,3)),BOX$=STR(BOX_NUM:M2$)
1782 LET UNITS$=STR(D[1]:NEW_M4$),PRICE$=STR(D[0]:M10$),BOX_NUM=NUM(D1$(6,3)),BOX$=STR(BOX_NUM:M2$)
1785 REM LET F1$(6,20)="UNDEFINED FLOWER",NEXT_INV$=""
1790 READ (FILE[81],KEY=D1$(26,2),KNUM=0,DOM=1795)IOL=IPFLFL
1795 REM LET LN$[LINE,0]=" "+D0$(12,4)+"     "+D1$(26,2)+"    "+D1$(11,1)+"    "+F1$(6,20)+"   "+BOX$+"  "+UNITS$+" "+F1$(1,1)+"    "+D1$(9,1)+"    "+PRICE$
1797 LET LN$[LINE,0]=""+D0$(12,4)+"  "+D1$(26,2)+"    "+D1$(11,1)+"    "+F1$(6,20)+"   "+BOX$+"  "+UNITS$+" "+F1$(1,1)+"    "+D1$(9,1)+"    "+PRICE$
1800 LET LN$[LINE,0]=LN$[LINE,0]+FILL(LN[12]-LEN(LN$[LINE,0]))+D0$
1805 REM LET TOT_INV_VAL=TOT_INV_VAL+D3[0]; REM Accum. Inv. Val.
1810 LET LN[0]=1,LINE=0; RETURN
1815 REM  **************** MAIN LOGIC *******************************
1820 MAIN_LOGIC: 
1825 IF X0$="A" THEN DIM D0$(15),D1$(61),D[1],D2$(12),D3[1],F1$(30),FC[11],G1$(24),G1[2],G2[2],G3[2],G4[2],Z$(13),FC0$(4),Y0$(9),Y1$(14),Y1[4],Y2$(44),M_AB0$(10),H_AB0$(10),M_AB1$(35),H_AB1$(35); GOTO 1840
1830 DIM I0$(6),I2$(37),I3$(240),I4$(14),D0$(15),D1$(61),D2$(12),I1$(6),F1$(30),FC[11],L2$(60),L1[1],L2[9],L3[7],L4[7],L5[6],G1$(24),G1[2],G2[2],G3[2],G4[2],D[1],D3[1],C1$(30),I7[3],I9[1],I10[24],Z$(13),FC0$(4),Y0$(9),Y1$(14),Y1[4],Y2$(44)
1835 DIM M_AB0$(10),M_AB1$(35),H_AB0$(10),H_AB1$(35)
1840 LET BOTTOM=0,P0CHK=0,FUN_F3$="Y"; LET AWB_BL_SEQ=0
1845 DIM AWB_BL_QTY$(8),AWB_BL_UNIT$(5),AWB_BL_NON_AMS$(1)
1850 PRECISION 4
1855 GOSUB DATA; GOSUB CLEAR_GLOBAL
1860 IF X0$="A" THEN IF GUI THEN PRINT (OSGUI.CHAN)'DISABLE'(4000) FI; GOTO 1890
1865 LET X0=1,X1=14,X3=1,X1$=M1$,X4=LEN(X1$),X=NUM(I0$),WINDID$="IPREFER ",GUI_ID=4000
1870 GOSUB GENINPUT; LET WINDID$=""; REM Ref. No.
1875 IF Y$="U" THEN GOTO 1815
1880 LET I0$=STR(X:X1$)
1885 IF I0$=X1$ THEN LET O7=1; GOSUB GENERROR; GOTO 1865
1890 GOSUB 4680; REM Get Record Data
1895 IF NOTFOUND THEN GOTO 1865
1900 IF GUI THEN GOSUB ENABLE_TOP_FIELDS; GOSUB CLEAR_GLOBAL
1905 GOSUB DATA; GOSUB CLEAR_GLOBAL
1910 LET D0$=I0$+"001010001"; REM D1$(10,1)=FIRST_REC$
1915 LET X0=3,X1=44,X3=1,X1$=M4$,X4=LEN(X1$),X=L3[0],GUI_ID=4003,ADDT=1
1920 GOSUB GENINPUT; REM Entry Value
1925 IF Y$="U" THEN GOTO 1865
1930 REM IF GUI THEN LET X=ROUND(X,0); PRINT (OSGUI.CHAN)'CLRTITLE'(GUI_ID),'TITLE'(GUI_ID,STR(X:M4$))
1935 IF GUI THEN PRINT (OSGUI.CHAN)'CLRTITLE'(GUI_ID),'TITLE'(GUI_ID,STR(X:M4$))
1940 LET L3[0]=X, L3[1]=X; REM E.V. & I.V.
1945 IF P0CHK=1 THEN GOSUB DATA; GOSUB CLEAR_GLOBAL
1950 IF I3$(15,4)=FILL(4) AND D1$(10,1)<>"Y" THEN LET I3$(155,4)="0999"
1955 LET X0=16,X1=46,X3=1,X1$="000",X4=LEN(X1$),X=NUM(I3$(155,4)),GUI_ID=4005
1960 LET PREV_NUMB_OF_INV=NUM(I3$(155,4))
1965 GOSUB GENINPUT; REM  "# of Invoices
1970 IF Y$="U" THEN GOTO 1915
1975 IF X<=0 OR X>999 THEN LET X8$="<< Number of Invoices are from 1 to 999 >>"; GOTO 1955
1980 LET I3$(155,4)=STR(X:X1$)
1985 LET X0=4,X1=20,X3=0,X4=5,X$=I2$(18,5),WINDID$="IPFLNTNW1",P0CHK=1,PROGID$="IPCNTY",GUI_ID=4010
1990 GOSUB GENINPUT; LET WINDID$="",PROGID$=""; REM  C/O
1995 IF Y$="U" THEN GOTO 1955
2000 LET I2$(18,5)=X$
2005 IF I2$(18,5)="MULTI" THEN GOTO 2030
2010 IF I2$(20,3)<>FILL(3) THEN GOTO 2025
2015 READ (FILE[64],KEY=I2$(18,2),DOM=2025)
2020 GOTO 2030
2025 LET X9$=MESS1$; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 1975
2030 IF I2$(7,5)=FILL(5) AND I2$(18,5)<>"MULTI" THEN LET I2$(7,5)=I2$(18,5)
2035 LET X0=4,X1=48,X3=0,X4=2,X$=I2$(7,2),WINDID$="IPFLNTNW1",PROGID$="IPCNTY",GUI_ID=4020
2040 GOSUB GENINPUT; LET WINDID$="",PROGID$=""; REM  C/E
2045 IF Y$="U" THEN GOTO 1985
2050 LET I2$(7,5)=X$
2055 READ (FILE[64],KEY=I2$(7,2),DOM=2065)
2060 GOTO 2070
2065 LET X9$=MESS1$; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 2035
2070 IF I3$(186,7)<>FILL(7) AND I3$(186,5)<>"MULTI" THEN LET X=NUM(I3$(186,7)) ELSE LET X=-1
2075 LET X0=4,X1=67,X3=6,X$=FND$(X),GUI_ID=4030
2080 GOSUB GENINPUT; REM  Export Date
2085 IF Y$="U" THEN GOTO 2035
2090 IF X<0 THEN LET O7=5; GOSUB GENERROR; GOTO 2070
2095 LET I3$(186,7)=STR(X)
2100 LET X0=5,X1=9,X3=1,X1$=M4$,X4=LEN(X1$),X=L3[2],GUI_ID=4040
2105 GOSUB GENINPUT; REM  Weight
2110 IF Y$="U" THEN GOTO 2070
2115 LET L3[2]=X
2120 LET X0=5,X1=41,X3=1,X1$=M4$,X4=LEN(X1$),X=L3[4],GUI_ID=4050
2125 GOSUB GENINPUT; REM  Charges
2130 IF Y$="U" THEN GOTO 2100
2135 LET L3[4]=X
2140 WRITE (FILE[1])IOL=IPDFLNX; REM Update ACE 3461 Rec.
2145 WRITE (FILE[6])IOL=IPLGX; REM Update Log Book
2150 DIM M_AB0$(10),M_AB1$(35),M_AWB$(16)
2155 DIM H_AB0$(10),H_AB1$(35),H_AWB$(12)
2160 LET AWB_BL_SEQ=AWB_BL_SEQ+1
2165 LET M_AB0$(1,6)=I0$,M_AB0$(7,4)=STR(AWB_BL_SEQ:"0000"); REM Preapre Key to Read with for Master Rec.
2170 DIM AWB_BL_QTY$(8),AWB_BL_UNIT$(5),AWB_BL_NON_AMS$(1)
2175 REM READ (FILE[11],KNUM=0,KEY=M_AB0$,DOM=2097)IOL=M_IPAWBX; REM Read Master Rec.
2180 IF KEEP_FLOW_ENT$="N" THEN LET D1$(10,1)=FILL(1),TRANSF_IND$=FILL(1); IF GUI THEN PRINT (OSGUI.CHAN)'DISABLE'(4060); GOSUB CLEAR_GLOBAL FI; GOTO 2240 ELSE IF GUI=0 THEN PRINT 'SF',@(67,5),D1$(10,1),'SB' ELSE LET A=FNCHECK(4060,D1$(10,1)); REM gosub ENABLE_FIELDS
2185 REM IF KEEP_FLOW_ENT$<>"Y" THEN LET D1$(10,1)=FILL(1),TRANSF_IND$=FILL(1); IF GUI=0 THEN PRINT 'SF',@(67,5),D1$(10,1),'SB' ELSE LET A=FNCHECK(4060,D1$(10,1)) FI ELSE GOSUB ENABLE_FIELDS; GOTO 2030
2190 IF D1$(10,1)=FILL(1) THEN LET D1$(10,1)="N"
2195 LET PREV_XFER_IND$=D1$(10,1)
2200 LET X0=5,X1=67,X3=5,X4=1,X1$="",X$=D1$(10,1),GUI_ID=4060
2205 GOSUB GENINPUT; REM Xfer. Ind.
2210 LET A$=STBL("DESTID2",ERR=2215); LET Y$="U"
2215 IF Y$="U" THEN GOTO 2120
2220 LET LAST_X$=D1$(10,1),D1$(10,1)=X$,TRANSF_IND$=X$
2225 IF LAST_X$<>D1$(10,1) AND LAST_X$="Y" AND L1$(6,1)>="6" THEN LET X9$="<< ACE Cargo already has ABI Status. Cannot transfer again >>"; GOSUB GENERROR; GOSUB CLEAR_GLOBAL; LET D1$(10,1)=LAST_X$; GOTO 2200
2230 IF D1$(10,1)<>PREV_XFER_IND$ THEN GOSUB UPDATE_INV_LINES; REM (4810)
2235 REM  *************** INVOICES ***************************
2240 IF GUI THEN GOSUB ENABLE_MIDDLE_FIELDS; GOSUB CLEAR_GLOBAL
2245 REM IF GUI THEN GOSUB ENABLE_FIELDS
2250 IF MULTIPLE_FARMS$<>"Y" THEN IF GUI THEN PRINT (OSGUI.CHAN)'DISABLE'(4075); REM If not Multiple Farms, Disable Farm Field
2255 LET PREV$=D0$(7,5),FUN_F3$="N",INV_F3$="Y",P0CHK=1,D1$(46,16)=AWB$
2260 GOTO 2270
2265 LET O7=6; GOSUB GENERROR
2270 LET X0=7,X1=8,X3=3,X4=3,X$=D0$(7,3),GUI_ID=4070
2275 GOSUB GENINPUT; REM Inv. Seq. #
2280 IF Y$="U" THEN IF GUI THEN GOSUB ENABLE_TOP_FIELDS FI; LET INV_F3$="N", FUN_F3$="Y"; IF KEEP_FLOW_ENT$<>"Y" THEN GOTO 2120 ELSE GOTO 2190
2285 IF X$="EN" THEN GOTO 4470
2290 LET D0$(7,3)=STR(NUM(X$,ERR=2265):M7$); DIM D[1],D3[1]
2295 IF D0$(7,3)=M7$ THEN GOTO 2265; REM Chl if Inv. Seq. # is "000"
2300 LET Y0$=D0$(1,9); REM Setup Key for Inv. Seq.
2305 READ (FILE[10],KEY=Y0$,DOM=2310)IOL=IPINVX
2310 REM READ (FILE[11],KNUM=0,KEY=M_AB0$,DOM=2220)IOL=M_IPAWBX; REM Read Master Rec.
2315 REM READ (FILE[11],KNUM=0,KEY=H_AB0$,DOM=2221)IOL=H_IPAWBX; REM Read House Rec.
2320 GOSUB DISP_INV_AWB; REM (2730)
2325 IF NUM(D0$(7,3))>NUM(I3$(155,4)) THEN LET X9$="<< Higher than number of invoices >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 2270
2330 LET X0=1,X1=49,X3=1,X1$=M4$,X4=LEN(X1$),X=Y1[0],GUI_ID=4072
2335 REM LET X8$="<< "+STR(GUI_ID)+" >>"; GOSUB GENERROR
2340 GOSUB GENINPUT; REM *** Invoice Value
2345 REM LET X8$=" "; GOSUB GENERROR
2350 IF Y$="U" THEN GOTO 2270
2355 LET Y1[0]=X
2360 REM *************************************************************
2365 REM * Update Invoice File Information  IPINVx                   *
2370 REM *************************************************************
2375 LET Y1$(5,2)=I2$(18,2); REM C/O
2380 REM WRITE (FILE[10])IOL=IPINVX; REM ***
2385 REM GOSUB DISP_INV_AWB; REM (2730)
2390 REM IF NUM(D0$(7,3))>NUM(I3$(155,4)) THEN LET X9$="<< Higher than number of invoices >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 2190
2395 IF MULTIPLE_FARMS$<>"Y" THEN IF Y$="U" THEN GOTO 2270 ELSE GOTO 2460
2400 LET X0=7,X1=18,X3=3,X4=2,X$=D0$(10,2),GUI_ID=4075
2405 REM LET X8$="<< "+STR(GUI_ID)+" >>"; GOSUB GENERROR
2410 IF REC_YES$="N" THEN LET REC_YES$=FILL(1),X$=Z$(10,2),D0$(1,11)=Z$(1,11)
2415 GOSUB GENINPUT; REM Farm Seq. #
2420 REM LET X8$=" "; GOSUB GENERROR
2425 IF FNE(X$) OR X$="0" THEN LET X9$="<< Must enter Farm # >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 2400
2430 IF Y$="U" THEN LET D0$(10,6)="000000"; DIM D[1],D3[1]; GOTO 2270
2435 IF D0$(10,2)<>"01" AND X$="1" THEN IF GUI THEN GOSUB ENABLE_MIDDLE_FIELDS; GOSUB CLEAR_GLOBAL
2440 IF X$="EN" THEN GOTO 4470; REM Save Record
2445 LET D0$(10,2)=STR(NUM(X$,ERR=2455):M5$)
2450 GOTO 2460
2455 LET O7=6; GOSUB GENERROR; GOTO 2400
2460 REM IF D0$(7,5)<>PREV$ THEN LET PREV$=D0$(7,5),Z$=D0$; GOSUB DISP_INV_AWB; IF GUI=0 THEN PRINT 'SF',@(30,7),D1$(1,5) ELSE PRINT (OSGUI.CHAN)'TITLE'(4080,D1$(1,5))
2465 LET PREV$=D0$(7,5); GOSUB DISP_INV_AWB; IF GUI=0 THEN PRINT 'SF',@(30,7),D1$(1,5) ELSE PRINT (OSGUI.CHAN)'TITLE'(4080,D1$(1,5))
2470 REM IF NUM(I3$(155,4))>1 OR D1$(1,5)<>FILL(5) THEN GOTO 2335
2475 REM READ (FILE[82],KEY=I4$(34,15),KNUM=2,DOM=2335)IOL=IPFLFM; REM We no longer have the MID at the Header Level
2480 REM LET D1$(1,5)=G0$
2485 LET X0=7,X1=30,X3=0,X4=5,X$=D1$(1,5),WINDID$="IPFLNTW2",PROGID$="IPFLFR",GUI_ID=4080
2490 GOSUB GENINPUT; LET WINDID$="",PROGID$=""; REM Farm Id.
2495 IF Y$="U" THEN IF MULTIPLE_FARMS$="Y" THEN GOTO 2400 ELSE GOTO 2270
2500 LET D1$(1,5)=X$,FARM$=X$
2502 IF D1$(1,2)<>I2$(18,2) THEN LET X9$="<< Farm not from Country of Origin >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 2485
2505 READ (FILE[82],KEY=D1$(1,5),DOM=2530,KNUM=0)IOL=IPFLFM
2510 IF X0$="A" THEN READ (FILE[44],KNUM=1,KEY=G1$(25,16),DOM=2520); REM Verify that the MID from Flower F/M exists in 'IPMANF'
2515 GOTO 2525
2520 LET X9$="<< WARNING: MID "+G1$(25,16)+" not in Manufacturer F/M >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR
2525 LET Z$=D0$; GOTO 2535
2530 LET X9$="<< Code not in Farm Codes File >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 2485
2535 IF MULTIPLE_FARMS$="Y" AND D0$(10,2)<>"01" THEN GOTO 2700; REM When MULTIPLE_FARMS$="Y" and not on the First Farm ID, Goto the GRID.
2540 IF GUI=0 THEN PRINT 'SF',@(36,X0),@(65),D1$(30,16) ELSE PRINT (OSGUI.CHAN)'TITLE'(4085,D1$(46,16)),'TITLE'(4090,D1$(30,16)); REM Master AWB & House AWB
2545 LET X0=7,X1=65,X3=0,X4=16,X$=D1$(46,16),GUI_ID=4085
2550 IF FNE(D1$(46,16)) THEN LET D1$(46,16)=DEF_MAWB$,X$=D1$(46,16); REM Assign default MAWB #
2555 GOSUB GENINPUT; REM *** Master  AWB # ***
2560 IF Y$="U" THEN GOTO 2485
2562 LET X$=X$+FILL(X4-LEN(X$))
2565 LET LAST_X$=D1$(46,16),D1$(46,16)=X$,MAWB$=X$,CODE$=D0$(1,11),FUN_F3$="",M_AB1$(2,16)=D1$(46,16),M_AB1$(1,1)="M",I8$(1,35)=D1$(46,16)
2570 LET DEF_MAWB$=D1$(46,16),MAWB$=DEF_MAWB$; REM Save Master AWB/BL# to Default it in the next Invoice
2572 IF Y$<>"P" AND LAST_X$<>X$ THEN IF GUI THEN LET OSGUI_IPFLNTN$=OSGUI$,OSGUI$=OSGUI_IPACEQEN1$ FI; CALL "IPAWB",ERR=2575,I0$,X$,FILE[11],OSGUI$,O2$,FILE[72]; IF GUI THEN LET OSGUI$=OSGUI_IPFLNTN$; REM Chk if AWB/BL # is used in another Ref.
2575 LET X0=7,X1=65,X3=0,X4=16,X$=D1$(30,16),GUI_ID=4090
2580 GOSUB GENINPUT; REM *** House AWB # ***
2585 LET A$=STBL("DESTID2",ERR=2590); LET Y$="U"
2590 IF Y$="U" THEN GOTO 2545
2592 LET X$=X$+FILL(X4-LEN(X$))
2595 LET LAST_X$=D1$(30,16),D1$(30,16)=X$,HAWB$=X$,H_AB1$(2,16)=D1$(30,16),H_AB1$(1,1)="H"
2597 REM IF Y$<>"P" AND LAST_X$<>X$ THEN IF GUI THEN LET OSGUI_IPFLNTN$=OSGUI$,OSGUI$=OSGUI_IPACEQEN1$ FI; CALL "IPAWB",ERR=2598,I0$,X$,FILE[11],OSGUI$,O2$,FILE[72]; IF GUI THEN LET OSGUI$=OSGUI_IPFLNTN$; REM Chk if AWB/BL # is used in another Ref.
2598 IF Y$<>"P" AND LAST_X$<>X$ THEN IF GUI THEN LET OSGUI_IPFLNTN$=OSGUI$,OSGUI$=OSGUI_IPACEQEN1$ FI; CALL "IPCHKAWBF",ERR=2600,I0$,X$,FILE[80],OSGUI$,O2$,FILE[72],D0$; IF GUI THEN LET OSGUI$=OSGUI_IPFLNTN$; REM Chk if AWB/BL # is used in another Ref.
2600 IF I3$(174,1)<>"Y" AND ACE_SINGLE_CONSG_INV$<>"Y" THEN LET D2$(1,6)=L2$(53,6); GOTO 2640; REM Chk if this Entry will have Multiple Consignees, if not get the Consignee Code from the Entry.
2605 LET X0=7,X1=30,X3=0,X4=6,X$=D2$(1,6),WINDID$="IPACI1W1",PROGID$="IPACI",GUI_ID=4100
2610 GOSUB GENINPUT; LET WINDID$="",PROGID$=""; REM Consignee
2615 IF Y$="U" THEN GOTO 2575
2620 LET D2$(1,6)=X$+FILL(X4-LEN(X$))
2625 READ (FILE[50],KEY=D2$(1,6),DOM=2635,KNUM=0)IOL=ARCUX
2630 GOTO 2640
2635 LET X9$="<< Code not in Customer File >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 2605
2640 LET X0=5,X1=41,X3=1,X1$=NEW_M4$,X4=LEN(X1$),X=NUM(AWB_BL_QTY$),GUI_ID=4120
2645 GOSUB GENINPUT; REM  Qty
2650 IF Y$="U" THEN IF (I3$(174,1)="Y" OR ACE_SINGLE_COMSG_INV$="Y") THEN GOTO 2605 ELSE GOTO 2575; REM Goto Consignee or House AWB/BL No.
2655 LET AWB_BL_QTY$(1,8)=STR(X),D3[1]=X; LET Y1[3]=X
2660 LET X0=5,X1=51,X3=0,X4=5,X$=AWB_BL_UNIT$,GUI_ID=4130
2662 IF FNE(AWB_BL_UNIT$) THEN LET AWB_BL_UNIT$="PCS",X$=AWB_BL_UNIT$; REM Default 'PCS'
2665 GOSUB GENINPUT; REM UoM
2670 IF Y$="U" THEN GOTO 2640
2675 LET AWB_BL_UNIT$=X$,D2$(7,5)=X$,Y1$(1,4)=D2$(7,5); REM D2$(7,5)=Units at the AWB/BL Level
2680 LET X0=5,X1=61,X3=5,X4=1,X$=AWB_BL_NON_AMS$,X1$="NY",GUI_ID=4140
2682 IF FNE(AWB_BL_NON_AMS$) THEN LET X$="N"; REM If Blank , default to 'N'
2685 GOSUB GENINPUT; REM Get Non-AMS Ind.
2690 LET A$=STBL("DESTID2",ERR=2695); LET Y$="U"
2695 IF Y$="U" THEN GOTO 2660
2700 LET LAST_X$=AWB_BL_NON_AMS$,AWB_BL_NON_AMS$=X$(1,1),D2$(12,1)=X$(1,1)
2702 LET Y2$(29,16)=D1$(30,16); REM Save House No. in Invoice Rec. - Eventually chg this to Y2$(29,16)
2703 LET Y2$(1,28)=I3$(95,60); REM Q.E. Desc.
2705 WRITE (FILE[10])IOL=IPINVX; REM Update Invoice Rec.
2710 WRITE (FILE[80])IOL=IPFLENX; REM Update
2715 IF GUI THEN GOSUB ENABLE_GRID_FIELDS; GOSUB CLEAR_GLOBAL
2720 IF TASK$="N" THEN GOTO 1040
2725 RETURN
2730 REM *** Display Invoice & AWB/BL Information - Middle od the Screen ***
2735 DISP_INV_AWB: 
2740 IF D0$(10,6)="000000" THEN LET D0$(10,6)="010001"
2745 LET SAVE_D1$=D1$; READ (FILE[80],KEY=D0$,DOM=2790,END=2790,ERR=GENERROR)IOL=IPFLENX
2750 READ (FILE[82],KNUM=0,KEY=D1$(1,5),DOM=2785)IOL=IPFLFM
2755 IF D1$(30,16)=FILL(16) THEN LET D1$(30,16)=SAVE_D1$(30,16); REM Get the House # from the First Farm of Inv.
2760 IF D1$(46,16)=FILL(16) THEN LET D1$(46,16)=SAVE_D1$(46,16); REM Get he Maste # from the First Farm of Inv.
2765 IF MULTIPLE_FARMS$="Y" THEN IF GUI=0 THEN PRINT 'SF',@(18),D0$(10,2) ELSE PRINT (OSGUI.CHAN)'TITLE'(4075,D0$(10,2))
2770 IF D1$(9,1)<>"T" THEN LET TOT_PRICE=D[1]*D[0],D3[0]=TOT_PRICE; REM Total Line Value = Ln. Units * Ln. Price
2772 IF D1$(9,1)="T" THEN LET TOT_PRICE=D[0],D3[0]=TOT_PRICE; REM Total Line Value = Ln. Units * Ln. Price
2775 IF M_AB1$(18,8)<>FILL(8) THEN LET AWB_BL_QTY$=M_AB1$(18,8),AWB_BL_UNIT$=M_AB1$(26,5) ELSE LET AWB_BL_QTY$=H_AB1$(18,8),AWB_BL_UNIT$=H_AB1$(26,5)
2780 LET AWB_BL_QTY$=STR(D3[1]:"########"),AWB_BL_UNIT$=D2$(7,5),AWB_BL_NON_AMS$=D2$(12,1); REM Qty, Unit & Non-AMS Ind.
2785 IF GUI=0 THEN PRINT 'SF',@(8,7),D0$(7,3),@(30),D1$(1,5),@(36),G1$(1,21),@(65),D1$(30,16) ELSE PRINT (OSGUI.CHAN)'TITLE'(4070,D0$(7,3)),'TITLE'(4072,FNGUINUM$(Y1[0],M11_INV_VAL$,4072)),'TITLE'(4075,D0$(10,2)),'TITLE'(4080,D1$(1,5)),'TITLE'(4085,D1$(46,16)),'TITLE'(4090,D1$(30,16)),'TITLE'(4100,D2$(1,6)),'TITLE'(4120,FNGUINUM$(NUM(AWB_BL_QTY$),"########",4120)),'TITLE'(4130,AWB_BL_UNIT$); LET S=FNLIST(4140,AWB_BL_NON_AMS$,"NY",1) FI; GOTO 2810
2790 REM -----------------------------------------------------------------------
2792 IF D0$(7,3)<>"001" THEN LET AWB$=DEF_MAWB$; REM Default Invoice Mater to other invoices
2795 DIM D1$(61),D[1],D2$(12),D3[1]; LET D1$(46,16)=AWB$; IF GUI=0 THEN PRINT 'SF',@(8,7),D0$(7,3),@(18),D0$(10,2),@(30),FILL(5),@(36),FILL(21),@(65),D1$(30,16) ELSE PRINT (OSGUI.CHAN)'TITLE'(4070,D0$(7,3)),'TITLE'(4072,FNGUINUM$(Y1[0],M11_INV_VAL$,4072)),'TITLE'(4075,D0$(10,2)),'TITLE'(4080,D1$(1,5)),'TITLE'(4085,D1$(46,16)),'TITLE'(4090,D1$(30,16)),'TITLE'(4100,D2$(1,6)),'TITLE'(4120,FNGUINUM$(NUM(AWB_BL_QTY$),"########",4120)),'TITLE'(4130,AWB_BL_UNIT$); LET S=FNLIST(4140,AWB_BL_NON_AMS$,"NY",1); REM ,'CLRTITLE'(4080)
2800 IF D1$(9,1)<>"T" THEN LET TOT_PRICE=D[1]*D[0],D3[0]=TOT_PRICE; REM Total Line Value = Ln. Units * Ln. Price
2802 IF D1$(9,1)="T" THEN LET TOT_PRICE=D[0],D3[0]=TOT_PRICE; REM Total Line Value = Ln. Units * Ln. Price
2805 PRINT (OSGUI.CHAN)'TITLE'(4050,FNGUINUM$(TOT_PRICE,M10$,4050)); REM Tot. Ln. Price
2810 RETURN
2815 REM ************* APPEND ********************************
2820 APPEND: 
2825 GOSUB CLRMSG
2830 IF LN[9]=0 THEN GOTO 2840
2835 GOSUB GETREC
2840 LET D0$(12,4)=FILL(4),WIND=1,F1$(6,20)=FILL(20)
2845 LET TASK$=" "
2850 IF LASTKEY$<>"" THEN IF LASTKEY$(12,4)="9999" THEN LET WIND=0; GOTO 2920
2855 DIM D1$(61),D[1],D2$(12),D3[1]
2860 REM IF LN[8]<>1 THEN LET D1$(11,1)=BOX_TYPE$
2865 LET D1$(9,1)=CDTCODE$; REM ,D1$(11,1)=BOX_TYPE$
2870 IF GUI THEN GOSUB GUI_PROMPTS2; GOTO 2880
2875 CALL "_popup.pub",1,20,77,4,'DEFAULT'," Append a line "
2880 LET OLD_YDISABLE$=YDISABLE$,YDISABLE$="D"
2885 LET D0_KEY$=FILL(15)
2890 REM READ (FILE[80],KEY=D0$(1,11)+"9999",DOM=2895)D0_KEY$
2892 READ (FILE[80],KEY=CODE$(1,11)+"9999",DOM=2895)D0_KEY$
2895 LET D0_KEY$=KEYP(FILE[80],END=2900)
2900 READ (FILE[80],KNUM=0,KEY=D0_KEY$,DOM=2910)IOL=IPFLENX
2905 IF D0_KEY$(1,11)=CODE$ THEN IF D[0]=0 AND D[1]=0 AND D0_KEY$(12,4)="0001" THEN LET D0$(12,4)="0001" ELSE LET D0$(12,4)=STR(NUM(D0_KEY$(12,4))+1:"0000"); DIM D1$(61),D[1]; GOTO 2915
2910 LET D0$(12,4)="0001"
2915 IF NUM(D0$(12,4))<=9999 THEN GOTO 2925
2920 LET X9$="<< Maximum number of sequences reached '9999' >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; IF GUI=0 THEN PRINT 'POP'; GOTO 2950
2925 IF GUI=0 THEN PRINT 'SF',@(1,0),D0$(12,4), ELSE PRINT (OSGUI.CHAN)'TITLE'(2000,D0$(12,4))
2930 LET X0=0
2935 GOTO 3570; REM Goto EDLINE to get the Edit/Append window fields
2940 IF GUI THEN LET ADD_CHG_GUI_WIND=0; GOSUB DESTROY_GUI_WINDOW ELSE PRINT 'POP',
2945 LET YDISABLE$=OLD_YDISABLE$,WIND=0,LN[7]=1; GOSUB BUILD
2950 LET BOTTOM=0; REM Getting out of the Append/Edit Window
2955 LET WIND=0,TASK$="EN"; GOTO GOTOEND
3500 REM 3500 ********* EDIT FLOWER LINES ****************
3510 EDLINE: 
3520 LET TASK$="EL"; GOSUB CLRMSG
3530 GOSUB GETREC
3540 IF GUI THEN GOSUB GUI_PROMPTS2; GOSUB CLEAR_GLOBAL
3550 LET BOTTOM=1,FUN_F3$="N",INV_F3$="N"
3560 LET X0=LN[5]+LN[8]-1
3570 LET X1=10,X3=3,X4=2,X$=D1$(26,2),WINDID$="IPFLNTW3",PROGID$="IPFLDF",GUI_ID=4000
3580 GOSUB GENINPUT; LET WINDID$="",PROGID$=""; REM FLOWER CODE
3590 IF Y$="U" THEN GOTO 3570
3600 IF X$="EN" THEN GOTO 4470
3610 LET D1$(26,2)=STR(NUM(X$,ERR=3700):M5$)
3620 IF LN[9]>0 AND (D1$(26,2)=FILL(2) OR D1$(26,2)="00") THEN GOTO 4390
3630 READ (FILE[81],KEY=D1$(26,2),KNUM=0,DOM=3700)IOL=IPFLFL
3640 IF GUI=0 THEN PRINT 'SF',@(X1,X0),D1$(26,2),@(21),F1$(6,20),@(61),F1$(1,1) ELSE PRINT (OSGUI.CHAN)'TITLE'(4000,D1$(26,2)); REM ,'TITLE'(2010,F1$(6,20))
3650 LET D1$(14,12)=F1$(26,12),D1$(28,2)=F1$(38,2); REM ATDP/CTVL FLAG
3660 DIM FC0$(4),FC[11]
3670 READ (FILE[84],KEY=D1$(26,2)+FILL(2),DOM=3680)IOL=IPFLFL2; REM Flower Prices
3680 READ (FILE[84],KEY=D1$(26,2)+I2$(18,2),DOM=3710)IOL=IPFLFL2
3690 GOTO 3710
3700 LET X9$="<< Code not defined in Flower Codes File >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 3570
3710 LET X1=5,X3=0,X4=12,X$=D1$(14,12),WINDID$="IPIDAHW2",GUI_ID=4003
3720 IF O2$(100,1)="1" THEN LET WINDID$="IPENTHWA"; REM Inq. for new Tariff File
3730 GOSUB GENINPUT; LET WINDID$=""; REM Tariff No.
3740 IF Y$="U" THEN GOTO 3570
3750 IF FNE(X$) THEN LET X9$="<< Must Enter Tariff  >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 3710
3760 LET X$=X$+FILL(X4-LEN(X$)),X1$=X$(1,5)
3770 IF O2$(100,1)="1" THEN LET TAR_NUMB$=X$,ITEM_CODE$=FILL(5),DISPLAY_MSG=1; CALL "GENRHTS.PUB::READ_IPHTF"; IF TAR_NOT_FOUND THEN LET TAR_NOT_FOUND=0; GOTO 3710
3780 CALL "IPCKTF.PUB",X$,2,TARCH1,NOTFOUND,OSGUI$,O2$,T1$
3790 IF NOTFOUND THEN LET X9$="<< Tariff #: "+X$+" not on file >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 3710
3800 LET D1$(14,12)=X$+FILL(X4-LEN(X$))
3810 IF TASK$="EL" THEN GOTO 3830; REM IF D0$(12,4)="0001" THEN GOTO 3683
3820 REM LET D1$(11,1)=BOX_TYPE$; REM IF GUI=0 THEN PRINT 'SF',@(16,X0),BOX_TYPE$ FI; GOTO 3689
3830 LET X1=16,X3=5,X4=1,X1$=" MB",X$=D1$(11,1),GUI_ID=4005
3840 GOSUB GENINPUT; REM  BOX TYPE
3850 IF Y$="U" THEN GOTO 3570
3860 IF POS(X$=" MB")=0 THEN LET X9$="<< Enter 'M' for Mix Boxes, 'B' for Bouquets Boxes or blank for Complete boxes >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 4080
3870 LET BOX_TYPE$=X$
3880 LET D1$(11,1)=BOX_TYPE$
3890 LET X1=44,X3=1,X1$=M2$,X4=LEN(X1$),X=NUM(D1$(6,3)),GUI_ID=4010
3900 GOSUB GENINPUT; REM  "BOXES"
3910 IF Y$="U" THEN GOTO 3830; REM GOTO 3560
3920 LET D1$(6,3)=STR(X:X1$)
3930 LET X1=49,X3=1,X1$=M4$,X4=LEN(X1$),X=D[1],GUI_ID=4020
3940 GOSUB GENINPUT; REM  "UNITS"
3950 IF Y$="U" THEN GOTO 3890
3960 IF X=0 THEN LET O7=6; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 3930
3970 LET D[1]=X
3980 IF NUM(D1$(6,3))>X THEN LET X9$="<< Number of units can not be smaller than number of boxes >>"; GOSUB GENERROR; GOSUB CLEAR_GLOBAL; GOTO 3940
3990 IF Y$="P" THEN GOTO 4080
4000 IF F1$(1,1)="S" THEN GOTO 4040
4010 IF NUM(D1$(6,3))*75>=X THEN GOTO 4080
4020 LET X9$="<< Units > 75 per Box >>"
4030 GOTO 4060
4040 IF NUM(D1$(6,3))*100<=X THEN GOTO 4080
4050 LET X9$="<< Units < 100 per Box >>"
4060 GOSUB CLEAR_GLOBAL; GOSUB GENERROR
4070 IF Y$="U" THEN GOTO 3930
4080 IF D1$(9,1)=FILL(1) THEN LET D1$(9,1)=CDTCODE$
4090 IF GUI=0 THEN LET X$=CDTCODE$; PRINT 'SF',@(66,X0),D1$(9,1); GOTO 4160
4100 IF GUI=0 THEN LET X1=66,X3=3,X4=1,X$=D1$(9,1); GOTO 4120
4110 LET X1=66,X3=5,X4=1,X1$="CDT",X$=D1$(9,1),GUI_ID=4030
4120 GOSUB GENINPUT; REM  "CONSIGNMENT, DIRECT or TOTAL"
4130 IF Y$="U" THEN GOTO 3930
4140 IF POS(X$="CDT")=0 THEN LET X9$="<< Enter 'C' for Consignment,'D' for Direct or 'T' for Total >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 4080
4150 LET D1$(9,1)=X$
4160 PRECISION 4
4170 IF X$="C" OR X$="D" THEN IF D[0]=0 THEN LET D[0]=FC[MONTH]; REM GOTO 4010;REM AC ADDED OR X$="D" AS PER SUNBURST REQUEST 01/29/2010
4180 PRECISION 4
4190 IF WIND THEN LET X1=69 ELSE LET X1=71
4200 LET X3=1,X1$=M3$,X4=LEN(X1$),X=D[0],GUI_ID=4040
4210 IF D1$(9,1)="T" THEN LET X1$="########.00",X4=LEN(X1$)
4220 GOSUB GENINPUT; REM  "PRICE"
4230 LET A$=STBL("DESTID2",ERR=4240); LET Y$="U"
4240 IF Y$="U" THEN GOTO 4100
4250 LET D[0]=X
4260 IF D[0]=0 THEN LET X9$="<< Invalid Zero Amount >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 4180
4270 GOTO 4330; REM IF D1$(9,1)<>"T" THEN GOTO 4330
4280 IF L3[7]>0 THEN LET D[0]=D[0]*L3[7]; REM FOREIGN CURRENCY
4290 LET D[0]=D[0]/D[1]
4300 LET D1$(9,1)="D"
4310 REM IF GUI=0 THEN PRINT 'SF',@(X1,X0),FILL(LEN(X1$)),@(X1,X0),D[0]:M3$,@(66,X0),D1$(9,1) ELSE LET A1$=STR(D[0]:M3$); PRINT (OSGUI.CHAN)'TITLE'(4030,A1$),'TITLE'(4040,D1$(9,1))
4312 IF GUI=0 THEN PRINT 'SF',@(X1,X0),FILL(LEN(X1$)),@(X1,X0),D[0]:M10$,@(66,X0),D1$(9,1) ELSE LET A1$=STR(D[0]:M10$); PRINT (OSGUI.CHAN)'TITLE'(4030,A1$),'TITLE'(4040,D1$(9,1))
4320 REM -----------------------------------------------------------------------
4330 IF D1$(9,1)<>"T" THEN LET TOT_LINE=D[1]*D[0],D3[0]=TOT_LINE; IF GUI THEN PRINT (OSGUI.CHAN)'TITLE'(4050,STR(TOT_LINE))
4332 IF D1$(9,1)="T" THEN LET TOT_LINE=D[0],D3[0]=TOT_LINE; IF GUI THEN PRINT (OSGUI.CHAN)'TITLE'(4050,STR(TOT_LINE))
4340 LET D0$(1,11)=CODE$,D1$(1,5)=FARM$
4350 IF D0$(1,11)=FILL(11) THEN LET D0$=Z$,CODE$=D0$(1,11); REM ***
4360 IF I3$(174,1)<>"Y" AND ACE_SINGLE_CONSG_INV$<>"Y" THEN LET D2$(1,6)=L2$(53,6); REM Chk if Muliple Consignee, if not, get the Entry Consignee Code.
4365 LET D1$(46,16)=MAWB$,D1$(30,16)=HAWB$; REM Save Master & House from first record
4370 WRITE (FILE[80])IOL=IPFLENX
4380 REM IF D0$(12,4)="0001" THEN GOSUB CHANGE_OTHERS_RECORD
4390 IF WIND=1 THEN GOTO 2940
4400 IF NUM(D0$(12,4))>9998 THEN LET X9$="<< Number of lines reached its limit >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOSUB 3570; REM EDLINE
4410 IF GUI THEN GOSUB DESTROY_GUI_WINDOW; LET Y$=""
4420 LET TOT_AMOUNT=0
4430 LET Y$="",LINE=LN[8]; GOSUB BUILD; REM  GOSUB BUILDLINE
4440 LET BOTTOM=0; REM Getting out of the Edit/Append Window
4450 GOSUB CLEANUP
4460 LET X2=0; GOTO CONTROL
4470 REM ****************** SAVE RECORD *********************
4480 QUIT: 
4482 GOSUB VERIFY_SPECIFIC_INV_AMTS; REM (6800)
4485 IF TASK$="E" THEN LET NEXT_INV$=""
4490 IF WIND=1 THEN LET WIND=0; GOTO 2940
4500 IF TASK$="EL" THEN LET TASK$=""; GOTO 4410
4510 LET PIECES=0
4520 IF Y$="M" THEN GOTO 9990
4530 READ (FILE[80],KEY=I0$+FILL(9),DOM=4540)
4540 READ (FILE[80],END=4590)IOL=IPFLENX
4550 IF I0$=FILL(6) THEN GOTO 9990
4560 IF D0$(1,6)<>I0$ THEN GOTO 4590
4570 LET PIECES=PIECES+NUM(D1$(6,3)); REM Accum. Boxes
4580 GOTO 4540
4590 IF X0$<>"A" THEN IF PIECES<>L3[3] THEN LET X9$="<< WARNING: Boxes not equal to number of packages >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR
4600 LET O7=2; GOSUB GENERROR
4610 IF Y$="U" THEN GOTO CONTROL
4620 IF Y$<>"P" THEN GOTO 4600
4630 LET L3[3]=PIECES
4640 WRITE (FILE[1])IOL=IPDFLNX; REM INMEDIATE DELIVERY
4650 WRITE (FILE[6])IOL=IPLGX; REM LOG BOOK
4660 LET Y$=""
4670 IF NEXT_INV$="Y" THEN LET NEXT_INV$=""; IF GUI THEN LET GUI_ID=7000,LN[0]=-1; GOSUB GENLINE; GOSUB DISABLE_FIELDS; GOTO 1035 ELSE PRINT 'CF'; GOTO 1035 ELSE GOTO 9990
4680 REM *********** READ INFO *******************
4690 LET NOTFOUND=0
4700 EXTRACT (FILE[6],KEY=I0$,DOM=4820)IOL=IPLGX
4710 DIM C1$(30)
4720 READ (FILE[50],KEY=L2$(53,6),DOM=4740)IOL=ARCUX
4730 LET C1$=C1$+FILL(32-LEN(C1$))
4740 EXTRACT (FILE[1],KEY=I0$,DOM=4830)IOL=IPDFLNX
4750 IF I3$(186,7)=FILL(7) THEN LET I3$(186,7)=STR(L4[1]); REM EXP. DATE
4760 IF I2$(18,5)=FILL(5) THEN LET I2$(18,5)=I4$(32,2)
4770 IF L4[1]>0 THEN LET X$=DATE(L4[1]) ELSE LET X$=FILL(8)
4780 LET MONTH=NUM(X$(1,2))-1
4790 DIM PIECE[NUM(I3$(155,4))]
4800 IF I3$(174,1)<>"Y" AND ACE_SINGLE_CONSG_INV$<>"Y" THEN LET D2$(1,6)=L2$(53,6); REM If not using Multiple Consignees, default it from the Log Book.
4810 GOTO 4860
4820 LET X9$="<< Ref.# not in Log Book File >>"; GOTO 4840
4830 LET X9$="<< Ref.# not in Immediate Delivery File >>"
4840 GOSUB CLEAR_GLOBAL; GOSUB GENERROR
4850 LET NOTFOUND=1
4860 RETURN
4870 REM  ***** UPDATE XFER IND. FOR ALL INV. LINES *****************
4880 UPDATE_INV_LINES: 
4890 LET X$=D0$; REM STORE KEY OF CURRENT INV. #
4900 READ (FILE[80],KEY=KEY$(1,6)+"",DOM=4910)
4910 READ (FILE[80],END=4960)IOL=IPFLENX
4920 IF D0$(1,6)<>KEY$(1,6) THEN GOTO 4960
4930 LET D1$(10,1)=TRANSF_IND$
4940 WRITE (FILE[80])IOL=IPFLENX
4950 GOTO 4910
4960 LET D0$(1,15)=X$; REM RESET D0$ TO ORIGINAL REFERENCE
4970 READ (FILE[80],KEY=D0$,DOM=4990)IOL=IPFLENX
4980 GOTO 5020
4990 LET D0$(7,3)=STR(NUM(D0$(7,3))-1:M7$); REM FIND LAST SEQ# FOR THIS INV.#
5000 IF D0$(7,3)="000" THEN LET X9$="<< No records for this Reference >>"; GOSUB GENERROR; EXITTO 9990
5010 GOTO 4970
5020 LET Z$=D0$; GOSUB 7755; RETURN
5030 REM  *********** GET NEXT INVOICE/FARM LINE *********
5040 NEXT_FARM: 
5050 LET NEXT_INV$="Y",D0$(1,11)=CODE$
5060 IF MULTIPLE_FARMS$<>"Y" THEN LET D0$(7,5)=STR(NUM(D0$(7,3))+1:M7$)+"01" ELSE LET D0$(10,2)=STR(NUM(D0$(10,2))+1:M5$),D0$(12,4)="0001",Z$(10,2)=D0$(10,2); DIM D[1],D3[1],D2$(12); DIM D1$(61); LET CODE$=D0$(1,11); GOTO 5230
5070 GOTO 5130
5080 REM ** END FROM FARM LINE ** 
5090 NEXT_INVOICE: 
5100 LET NEXT_INV$="Y",AWB_BL_SEQ=AWB_BL_SEQ+1
5110 GOSUB VERIFY_SPECIFIC_INV_AMTS; REM IF INVALID_INV_AMT THEN GOTO CONTROL; REM (6800)
5120 LET D0$(1,6)=CODE$(1,6),D0$(7,5)=STR(NUM(CODE$(7,3))+1:M7$)+"01"
5130 LET D0$(12,4)="0001"; DIM D[1],D3[1],D2$(12); DIM Y1[4]
5140 IF NUM(D0$(7,3))>NUM(I3$(155,4)) THEN LET X9$="<< Maximum number of invoices reached >>"; GOSUB GENERROR; GOTO 4470; REM REACHED # OF INVOICES
5150 IF GUI=0 THEN PRINT 'CF' ELSE LET GUI_ID=7000,LN[0]=-1; GOSUB GENLINE; PRINT (OSGUI.CHAN)'CLRTITLE'(4070,4072,4075,4080,4085,4090,4100,4120,4130,4140,2030,2040,2050,2060)
5160 DIM AWB_BL_QTY$(8),AWB_BL_UNIT$(5),AWB_BL_NON_AMS$(1)
5170 LET Z$=D0$,TASK$="N"
5180 REM IF GUI=0 THEN GOSUB 7755 ELSE GOSUB 17753
5190 GOSUB DATA
5200 LET D0$=Z$
5210 IF MULTIPLE_FARMS$="Y" AND BOTTOM=1 THEN GOTO 2400; REM Goto Farm Seq. #
5220 GOTO 2235; REM Goto Next Inv. Seq. #
5230 REM ************ OPTIONS=NEXT WITH MULTIPLE_FARMS IS ON *****************
5240 LET Y$=""
5250 IF GUI=0 THEN PRINT 'CF'; GOSUB DATA; GOSUB DISP_INV_AWB; GOSUB 2400 ELSE LET GUI_ID=7000,LN[0]=-1; GOSUB GENLINE; PRINT (OSGUI.CHAN)'CLRTITLE'(4080,4085,4090,4090,4100,4120,4130,4140); GOSUB ENABLE_FIELDS; GOSUB DISP_INV_AWB; GOSUB 2400; REM Farm Seq. # GENINPUT 
5260 GOSUB 1070; GOTO 1045
5270 REM ****************** Pg Up for section Invoices **************
5280 IF GUI THEN PRINT (OSGUI.CHAN)'DISABLE'(4070,4072,4075,4080,14080,4085,4090,4100,14100,4120,4130,4140); REM Disable Inv. Seq. #, Value, Farm Seq. #, Farm Cd., MAWB #, HAWB#
5290 GOSUB 1900
5300 GOTO 1040
5310 REM *********** get first/last/curr keys for curr code ***********
5320 FIRSTKEY: 
5330 READ (FILE[80],KEY=CODE$+FILL(4),DOM=5340,ERR=GENERROR)
5340 LET FIRSTKEY$=KEY(FILE[80],ERR=5350)
5350 RETURN
5360 LASTKEY: 
5370 EXTRACT (FILE[80],KEY=CODE$+FILL(4,"}"),DOM=5380,ERR=GENERROR)
5380 LET LASTKEY$=KEYP(FILE[80],ERR=5390)
5390 RETURN
5400 CURRKEY: LET CURRKEY$=LN$[LN[8],0](LN[12]+1); RETURN
5410 REM  "-----  find key to start with on END and PAGEUP"
5420 FINDKEY: 
5430 IF TASK$="EN" THEN LET K$=LASTKEY$,KEYS=LN[6]-1 ELSE LET K$=LN$[1,0](LN[12]+1),KEYS=LN[6]
5440 EXTRACT (FILE[80],KEY=K$,ERR=GENERROR)
5450 LET SAVEK$=K$,K$=KEYP(FILE[80],END=5480,ERR=GENERROR)
5460 IF K$(1,11)<>CODE$ THEN GOTO 5480
5470 LET KEYS=KEYS-1; IF KEYS>0 THEN GOTO 5440
5480 IF K$(1,11)=CODE$ THEN LET STARTKEY$=K$(12) ELSE LET STARTKEY$=SAVEK$(12)
5490 RETURN
5500 REM "-----  Cleanup Uneeded Data"
5510 CLEANUP: 
5520 LET ABORT=0
5530 DIM SN0$(0),SN1$(0),SN1[0]
5540 RETURN
5550 REM "----- Get and Save a record"
5560 GETREC: 
5570 GOSUB CURRKEY
5580 EXTRACT (FILE[80],KEY=CURRKEY$,ERR=GENERROR)IOL=IPFLENX
5590 IF D1$(9,1)<>"T" THEN LET D3[0]=D[1]*D[0]; REM Ext. Value = Units * Price
5592 REM IF D1$(9,1)="T" THEN LET D3[0]=D[1]*D[0]; REM Ext. Value = Units * Price
5600 DIM SN0$(0),SN1$(0),SN1[8],SN99$[0],SN99[1]
5610 LET SN0$=VC_KEY$
5620 RETURN
5630 DISMSG: 
5640 IF GUI THEN GOTO 5710
5650 GOSUB CLRMSG
5660 PRINT STBL("FBX"),
5670 PRINT @(INT((78-ML1)/2),21),MSG1$,
5680 PRINT @(INT((78-ML2)/2),22),MSG2$,
5690 PRINT STBL("FTXT"),
5700 LET MSG1$="",MSG2$=""
5710 RETURN
5720 CLRMSG: 
5730 IF GUI THEN GOTO 5750
5740 PRINT @(1,22),FILL(76),
5750 RETURN
5760 REM TO CHANGE ALL D1(11,1) = TO THE FIRST ONE
5770 CHANGE_OTHERS_RECORD: 
5780 READ (FILE[80],END=5830,ERR=GENERROR)IOL=IPFLENX
5790 IF D0$(1,11)<>CODE$ THEN GOTO 5830
5800 LET D1$(11,1)=BOX_TYPE$
5810 WRITE (FILE[80])IOL=IPFLENX
5820 GOTO 5780
5830 READ (FILE[80],KNUM=0,KEY=KEY$,DOM=5840)IOL=IPFLENX
5840 RETURN
5900 REM 5900,5 *** Transfer Flower to 3461 ***
5905 REM *** Run Program to Create ACE Cargo Tariff Lines ***
5910 XFER: 
5915 GOSUB VERIFY_SPECIFIC_INV_AMTS; REM (6800)
5917 IF NEW=0 THEN GOSUB UPDATE_INVOICES; REM (7200) - Cycle thru all the Invoices to update them with the values from the Flower Entry Det. Recs
5920 GOSUB VERIFY_INV_AMTS; REM (6500)
5925 GOSUB CREATE_AWB_BL_RECS; REM (6600)
5927 REM IF NEW=0 THEN GOSUB UPDATE_INVOICES; REM (7200) - Cycle thru all the Invoices to update them with the values from the Flower Entry Det. Recs
5930 LET I3$(155,4)=STR(INV_SEQ-1:"000"); REM Update Inv. number of Inv's
5935 WRITE (FILE[1])IOL=IPDFLNX; REM Update number of Inv's in ACE 3461 Rec.
5937 IF X0$<>"A" THEN DIM OSGUI_IPFLDPENTHED$:FATTR(OSGUI$); LET OSGUI_IPFLDPENTHED$=OSGUI$; DIM VISITED$(0); LET VISITED$="IPFLDPENTHED:N(1)"; DIM VISITED$:VISITED$
5940 CALL "IPFLDPENTHED",ERR=5945,I0$,FILE[10],SELECTED$,OSGUI_IPFLDPENTHED$,VISITED$,FILE[ALL]; IF GUI THEN LET OSGUI$=OSGUI_IPFLNTN$; GOSUB DESTROY_GUI_WINDOW; REM Grid for Flower Header Info.
5945 CALL "IPFLXFREP",I0$,FILE[ALL],GUI,OSGUI$,A1
5947 IF A1<=0 THEN GOTO 5965
5950 IF GUI THEN LET O7=10,X9$="OK to Transfer?"; GOSUB GENERROR; IF Y$="E" LET X$="Y" ELSE LET X$="N"
5955 IF X$="N" THEN GOTO CONTROL
5960 RUN "IPFLT3461",ERR=5965
5965 GOTO 9995
6000 REM 0 - (GENINPUT) 6000-6190
6001 GENINPUT: REM "08/05/92 - General Input Routine Interface"
6005 LET WIND$=WINDID$,SEL$=SELVAL$,PRO$=PROGID$
6007 IF GUI THEN LET ADDT=0; IF X9<>0 THEN GOTO 6100 FI; GOTO 6090
6010 IF X9=1 THEN GOTO 6100
6020 IF ADDT THEN LET X9=9
6090 IF POS(Y$="PJQ") THEN LET WINDID$="",SELVAL$="",PROGID$=""; RETURN
6100 IF GUI=0 THEN CALL "GENINPUT.PUB",ERR=GENERROR,Z9$,Y$,(X0),(X1),(X2),(X3),(X4),X9,X1$(1),X,X$,INFO,WINDID$,SELVAL$,COMPID$,PROGID$,FILE[ALL],YDISABLE$,PGM(-2),FLD_HLP$; GOTO 6120
6110 CALL "GENGUINP.PUB",ERR=GENERROR,Z9$,Y$,(X0),(X1),(X2),(X3),(X4),X9,X1$(1),X,X$,INFO,WINDID$,SELVAL$,COMPID$,PROGID$,FILE[ALL],YDISABLE$,PGM(-2),FLD_HLP$,GUI_ID,BUTTON_KEYS$[ALL],OSGUI$,GUI_RADIO$
6120 ON POS(Y$="DAI PJCEU") GOTO 6180,6185,6300,6183,6190
6180 IF STBL("VERSW")="OFF" THEN GOSUB 8420 ELSE GOSUB 8410; REM "check other commands"
6182 GOTO 6100
6183 GOSUB INFO; LET Y$="E",WINDID$=WIND$,SELVAL$=SEL$,PROGID$=PRO$; GOTO 6100
6185 GOSUB 9200
6187 GOTO 6100
6190 RETURN
6200 INFO:
6210 RETURN
6300 REM 6300 - (ADDTL-CMD) 6300-6390
6310 REM -----------------------------------------------------------------------
6320 IF GUI=0 THEN IF ADDT=0 THEN GOTO 6100
6330 LET PREV_KEY$=D0$
6335 IF GUI_ID=7000 THEN IF X0$<>"A" THEN DIM OSGUI_IPFLDPENTDET$:FATTR(OSGUI$); LET OSGUI_IPFLDPENTDET$=OSGUI$; DIM VISITED$(0); LET VISITED$="IPFLDPENTDET:N(1)"; DIM VISITED$:VISITED$
6340 IF GUI_ID=7000 THEN CALL "IPFLDPENTDET",ERR=6370,I0$,FILE[80],SELECTED$,OSGUI_IPFLDPENTDET$,VISITED$,FILE[ALL]; IF GUI THEN LET OSGUI$=OSGUI_IPFLNTN$; GOSUB DESTROY_GUI_WINDOW; REM Grid for Flowet Detail Info.
6345 IF GUI_ID<>7000 THEN IF X0$<>"A" THEN DIM OSGUI_IPFLDPENTHED$:FATTR(OSGUI$); LET OSGUI_IPFLDPENTHED$=OSGUI$; DIM VISITED$(0); LET VISITED$="IPFLDPENTHED:N(1)"; DIM VISITED$:VISITED$
6350 IF GUI_ID<>7000 THEN CALL "IPFLDPENTHED",ERR=6370,I0$,FILE[10],SELECTED$,OSGUI_IPFLDPENTHED$,VISITED$,FILE[ALL]; IF GUI THEN LET OSGUI$=OSGUI_IPFLNTN$; GOSUB DESTROY_GUI_WINDOW; REM Grid for Flower Header Info.
6360 IF SELECTED$=FILL(15) THEN GOTO 6190; REM 6370
6370 RETURN
6500 REM 0 ** Verify that all Detail Line values for all Inv's add up to the Entry Val. **
6505 VERIFY_INV_AMTS: REM Make sure that all Det. Amts. add up to the Entry Value
6507 LET TOT_DET_LN_VAL=0,FARM_STRING$=""
6510 READ (FILE[80],KNUM=0,KEY=I0$+"",DOM=6515)
6515 READ (FILE[80],END=6540)IOL=IPFLENX
6520 IF D0$(1,6)<>I0$ THEN GOTO 6540
6525 LET TOT_DET_LN_VAL=TOT_DET_LN_VAL+D3[0]; REM Ext. Value -  Price * Units
6528 IF POS(D1$(1,5)=FARM_STRING$,5)=0 THEN LET FARM_STRING$=FARM_STRING$+D1$(1,5); REM Concatenate Farm ID
6530 GOTO 6515; REM Read Next Rec.
6535 REM -----------------------------------------------------------------------
6540 REM IF TOT_DET_LN_VAL<>L3[0] THEN LET X9$="<< Total of Entry detail does not match Entry Value >>",X8$="<< Total Entry Detail is "+STR(TOT_DET_LN_VAL)+" >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; REM EXITTO 1000
6545 IF TOT_DET_LN_VAL<>L3[0] THEN LET L3[0]=TOT_DET_LN_VAL,L3[1]=L3[0]; WRITE (FILE[6])IOL=IPLGX; IF GUI THEN PRINT (OSGUI.CHAN)'TITLE'(4003,FNNUM$(L3[0],M4$))
6550 IF LEN(FARM_STRING$)>5 THEN LET I3$(175,1)="Y",I3$(176,1)="Y"; WRITE (FILE[8])IOL=IPDFLNX; REM Set Multiple MID's Ind. & Multiple Entity Ind.
6555 REM ----- Add up all the Invoices -----------------------------------------
6560 GRAND_TOT_INV_VAL=0
6565 READ (FILE[10],KNUM=0,KEY=L0$+"",DOM=6570)
6570 READ (FILE[10],END=6580)IOL=IPINVX
6572 IF Y0$(1,6)<>L0$ THEN GOTO 6580
6575 LET GRAND_TOT_INV_VAL=GRAND_TOT_INV_VAL+Y1[0]
6577 GOTO 6570
6580 LET VALUE_DIFF=L3[0]-GRAND_TOT_INV_VAL; IF ABS(VALUE_DIFF)>2 THEN LET X9$="<< The difference between the Entry and Invoices value >>",X8$="<< is more than $2.00 >>"; GOSUB GENERROR; GOTO 6590
6582 IF GRAND_TOT_INV_VAL<>L3[0] THEN LET L3[0]=GRAND_TOT_INV_VAL,L3[1]=L3[0]; WRITE (FILE[6])IOL=IPLGX; REM Update the Entry Value
6590 RETURN
6600 REM 0 ** Create AWB/BL Records **
6602 CREATE_AWB_BL_RECS: 
6604 READ (FILE[11],KNUM=0,KEY=I0$+"",DOM=6605)
6605 READ (FILE[11],END=6610)IOL=IPAWBX
6606 IF AB0$(1,6)<>I0$ THEN GOTO 6610
6607 REMOVE (FILE[11],KEY=AB0$,DOM=6608)
6608 GOTO 6605
6609 REM ---- Loop thru all Invoices -------------------------------------------
6610 LET AWB_BL_SEQ=1,INV_SEQ=1; DIM AB0$(10),AB1$(35)
6612 LET KEY$=I0$(1,6)+STR(INV_SEQ:"000")+"010001"
6616 READ (FILE[80],KNUM=0,KEY=KEY$,DOM=6650)IOL=IPFLENX
6617 IF AWB_BL_SEQ=5 AND D1$(30,16)<>FILL(16) THEN GOSUB 6660; REM Create the 'MORE' AWB/BL Rec.
6618 LET AB0$(1,6)=I0$,AB0$(7,4)=STR(AWB_BL_SEQ:"0000")
6620 IF D1$(30,16)=FILL(16) THEN LET AB1$(1,1)="R",AB1$(31,1)="N",AB1$(2,16)=D1$(46,16),AB1$(18,8)=STR(D3[1]:"########"),AB1$(26,5)=D2$(7,5),AB1$(32,1)=D2$(12,1) ELSE IF D0$(7,3)="001" LET AB1$(1,1)="M",AB1$(31,1)="N",AB1$(2,16)=D1$(46,16),AB1$(32,1)=D2$(12,1)
6622 IF D0$(7,3)="001" OR AB1$(1,1)="R" THEN WRITE (FILE[11])IOL=IPAWBX ELSE LET AWB_BL_SEQ=AWB_BL_SEQ-1; REM Write the AWB/BL Master
6624 IF D1$(30,16)=FILL(16) THEN GOTO 6636; REM Chk if there is a House 
6626 DIM AB1$(35)
6628 LET AWB_BL_SEQ=AWB_BL_SEQ+1
6629 IF AWB_BL_SEQ=5 THEN GOSUB 6660; REM Create the 'MORE' AWB/BL Rec.
6630 LET AB0$(7,4)=STR(AWB_BL_SEQ:"0000")
6632 LET AB1$(1,1)="H",AB1$(31,1)="N",AB1$(2,16)=D1$(30,16),AB1$(18,8)=STR(D3[1]:"########"),AB1$(26,5)=D2$(7,5),AB1$(32,1)=D2$(12,1)
6634 WRITE (FILE[11])IOL=IPAWBX; REM Write the AWB/BL House
6636 LET AWB_BL_SEQ=AWB_BL_SEQ+1
6638 LET INV_SEQ=INV_SEQ+1
6639 DIM AB1$(35)
6640 GOTO 6612; REM Read Next Rec.
6650 RETURN
6660 REM 0 *** Create the 'MORE' AWB/BL Record ***
6665 LET AB0$(7,4)=STR(AWB_BL_SEQ:"0000")
6670 LET AB1$(1,1)="H",AB1$(2,4)="MORE"
6675 WRITE (FILE[11])IOL=IPAWBX; REM Write the 'MORE' AWB/BL Rec.
6680 LET AWB_BL_SEQ=AWB_BL_SEQ+1
6690 RETURN
6700 REM 0 - (GENLINE) 6700-6780
6701 GENLINE: REM "09/29/92 - General Line Item Handling Routine Interface"
6705 LET TASK$=""
6710 IF GUI=0 THEN CALL "GENLINE.PUB",ERR=GENERROR,LN[ALL],LOC[ALL],LN$[ALL],MASK$,ACT$,YDISABLE$,TASK$; GOTO 6712
6711 CALL "GENGULIN.PUB",ERR=GENERROR,LN[ALL],LOC[ALL],LN$[ALL],MASK$,ACT$,YDISABLE$,TASK$,GUI_LN[ALL],GUI_ID,ROW_ID,BUTTON_KEYS$[ALL],OSGUI$
6712 IF LN[0]=2 THEN RETURN
6715 IF TASK$<>"" THEN GOTO 6780
6720 ON POS(ACT$="XMDIA") GOTO 6730,6730,6730,6750,6745,6300,6780
6730 LET Y$=ACT$(1,1); IF STBL("VERSW")="OFF" THEN GOSUB 8420 ELSE GOSUB 8410; REM "Check other commands"
6740 GOTO 6710
6745 GOSUB INFO; LET ACT$=""; GOTO 6780
6750 GOSUB 9200
6760 GOTO 6710
6780 RETURN
6800 REM 0 ** Verify that all Detail Lines for this Inv. add up to the Total of the Inv.
6805 VERIFY_SPECIFIC_INV_AMTS: REM *** Called from Ln's 4482,5110 & 5915 ***
6807 LET TOT_SPEC_INV_VAL=0,INVALID_INV_AMT=0,TOT_SPEC_INV_QTY=0
6810 READ (FILE[80],KNUM=0,KEY=Y0$(1,9)+"",DOM=6815)
6815 READ (FILE[80],END=6840)IOL=IPFLENX
6820 IF D0$(1,9)<>Y0$(1,9) THEN GOTO 6840
6825 LET TOT_SPEC_INV_VAL=TOT_SPEC_INV_VAL+D3[0]; REM Ext. Value -  Price * Units
6827 LET TOT_SPEC_INV_QTY=TOT_SPEC_INV_QTY+NUM(D1$(6,3)); REM Qty
6828 IF D0$(10,6)="010001" THEN LET SAVE_HOUSE$=D1$(30,16),SAVE_FARM$=D1$(1,5),SAVE_CONSIG$=D2$(1,6); REM Save House No. & Famr Id. & Consignee from the first Record
6829 IF D0$(10,6)<>"010001" THEN IF (D1$(30,16)<>SAVE_HOUSE$ OR D1$(1,5)<>SAVE_FARM$ OR D2$(1,6)<>SAVE_CONSIG$) THEN LET D1$(30,16)=SAVE_HOUSE$,D1$(1,5)=SAVE_FARM$,D2$(1,6)=SAVE_CONSIG$; WRITE (FILE[80])IOL=IPFLENX
6830 GOTO 6815; REM Read Next Rec.
6835 REM -----------------------------------------------------------------------
6840 REM IF TOT_SPEC_INV_VAL<>Y1[0] THEN LET X9$="<< Total of Invoice detail does not match Invoice Value >>",X8$="<< Total Inv. Detail is "+STR(TOT_SPEC_INV_VAL)+" >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; LET INVALID_INV_AMT=1; REM EXITTO 1000
6845 REM IF TOT_SPEC_INV_QTY<>Y1[3] THEN LET X9$="<< Total of Invoice detail Qty's do not match Invoice Qty >>",X8$="<< Total Inv. Detail Qty is "+STR(TOT_SPEC_INV_QTY)+" >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; LET INVALID_INV_AMT=1; REM EXITTO 1000
6850 IF TOT_SPEC_INV_VAL<>Y1[0] OR TOT_SPEC_INV_QTY<>Y1[3] THEN LET Y1[0]=TOT_SPEC_INV_VAL,Y1[3]=TOT_SPEC_INV_QTY FI; IF Y1[0]<1 THEN LET Y1[0]=1 FI; LET Y1[0]=ROUND(Y1[0],0); WRITE (FILE[10])IOL=IPINVX; IF GUI AND WIND<>1 THEN PRINT (OSGUI.CHAN)'TITLE'(4072,FNGUINUM$(Y1[0],M11_INV_VAL$,4072)),'TITLE'(4120,FNGUINUM$(Y1[3],"########",4120));REM Updating Invoice Record
6855 LET D0$(1,9)=Y0$,D0$(10,6)="010001"; READ (FILE[80],KNUM=0,KEY=D0$,DOM=6890)IOL=IPFLENX
6860 LET D3[1]=TOT_SPEC_INV_QTY; WRITE (FILE[80])IOL=IPFLENX
6890 RETURN
6900 REM 0 ** Calculate and Display Totals for the Bottom of the Grid for Inv **
6905 CALC_DISP_TOTALS: REM *** Called from SUBCONTROL ***
6907 TOT_INV_VAL=0,TOT_BOXES=0,TOT_UNITS=0
6910 READ (FILE[80],KNUM=0,KEY=Y0$(1,9)+"",DOM=6915)
6915 READ (FILE[80],END=6940)IOL=IPFLENX
6920 IF D0$(1,9)<>Y0$(1,9) THEN GOTO 6940
6925 LET TOT_INV_VAL=TOT_INV_VAL+D3[0]; REM Ext. Value =  Price * Units
6927 LET TOT_BOXES=TOT_BOXES+NUM(D1$(6,3)); REM Accum. Boxes/Qty
6928 LET TOT_UNITS=TOT_UNITS+D[1]; REM Accum. Units
6930 GOTO 6915; REM Read Next Rec.
6940 REM -----------------------------------------------------------------------
6950 LET TOT_INV_VAL$=FNNUM$(TOT_INV_VAL,M13$)
6960 LET TOT_BOXES$=FNNUM$(TOT_BOXES,M4$)
6970 LET TOT_UNITS$=FNNUM$(TOT_UNITS,M4$)
6980 IF GUI THEN PRINT (OSGUI.CHAN)'TITLE'(2030,TOT_INV_VAL$),'TITLE'(2040,TOT_BOXES$),'TITLE'(2050,TOT_UNITS$); REM Display Totals at bottom of Grid
6990 RETURN
7000 REM 0 ** Calculate and Display Totals Boxes for Entry **
7005 CALC_DISP_TOT_BOXES: REM *** Called from SUBCONTROL ***
7007 TOT_ENT_BOXES=0
7010 READ (FILE[80],KNUM=0,KEY=I0$(1,6)+"",DOM=7015)
7015 READ (FILE[80],END=7040)IOL=IPFLENX
7020 IF D0$(1,6)<>I0$(1,6) THEN GOTO 7040
7027 LET TOT_ENT_BOXES=TOT_ENT_BOXES+NUM(D1$(6,3)); REM Accum. Boxes/Qty for entire Entry
7030 GOTO 7015; REM Read Next Rec.
7040 REM -----------------------------------------------------------------------
7060 LET TOT_ENT_BOXES$=FNNUM$(TOT_ENT_BOXES,M4$)
7080 IF GUI THEN PRINT (OSGUI.CHAN)'TITLE'(2060,TOT_ENT_BOXES$)
7090 RETURN
7200 REM 7200 *** Loop thru all the Invoices and update them with the flower Entry Values ***
7205 UPDATE_INVOICES:
7210 FOR I=1 TO 999
7215 READ (FILE[10],KNUM=0,KEY=I0$+STR(I:"000"),DOM=7240)IOL=IPINVX
7220 GOSUB READ_FLOWER_DET_RECS; REM (7300)
7230 NEXT I
7235 GOTO 7290
7240 EXITTO 7290
7290 RETURN
7300 REM 0 ** Read thru all Detail Lines for all invoices to update them **
7305 READ_FLOWER_DET_RECS:
7307 LET TOT_SPEC_INV_VAL=0,INVALID_INV_AMT=0,TOT_SPEC_INV_QTY=0
7310 READ (FILE[80],KNUM=0,KEY=Y0$(1,9)+"",DOM=7315)
7315 READ (FILE[80],END=7335)IOL=IPFLENX
7320 IF D0$(1,9)<>Y0$(1,9) THEN GOTO 7335
7325 LET TOT_SPEC_INV_VAL=TOT_SPEC_INV_VAL+D3[0]; REM Ext. Value -  Price * Units
7327 LET TOT_SPEC_INV_QTY=TOT_SPEC_INV_QTY+NUM(D1$(6,3)); REM Qty
7330 GOTO 7315; REM Read Next Rec.
7335 REM -----------------------------------------------------------------------
7350 IF TOT_SPEC_INV_VAL<>Y1[0] OR TOT_SPEC_INV_QTY<>Y1[3] THEN LET Y1[0]=TOT_SPEC_INV_VAL,Y1[3]=TOT_SPEC_INV_QTY FI; IF Y1[0]<1 THEN LET Y1[0]=1 FI; LET Y1[0]=ROUND(Y1[0],0); WRITE (FILE[10])IOL=IPINVX; REM Updating Invoice Record
7390 RETURN
7500 PROMPTS: 
7501 REM 0 ************* Display Screen ****************
7502 IF GUI THEN GOTO GUI_PROMPTS
7503 GOSUB BOX
7504 PRINT 'SB',STBL("FTXT"),
7510 PRINT @(2,1),"Reference #"
7520 PRINT @(2,2),"Customer #",@(33),"Name"
7530 PRINT @(2,4),"Country of Origin",@(33),"Export Country",@(55),"Export Date"
7540 PRINT @(2,5),"Weight",@(33),"Charges",@(55),"Transferred"
7550 PRINT @(2,7),"Inv #",@(20),"Farm Code",@(59),"AWB #"
7560 PRINT @(1,9),"Line",@(7),"Flower # BT",@(21),"Description",@(44),"Boxes",@(56),"Units",@(64),"C/D/T",@(71),"Price"
7695 IF STBL("SOFTWARE")="ASCI" THEN IF (O1$="RMMENU" OR O1$="AMMENU") AND MENU_OSGUI$<>"" THEN CALL "GENGUPR.PUB::HIDE_MENU",ERR=7699,MENU_OSGUI$,OSGUI$; LET OSGUI$=""; LET MENU_OSGUI$="" ELSE GOTO 7699 ELSE IF O1$="RMMENU2" AND MENU_OSGUI$<>"" THEN CALL "GENGUPR.PUB::HIDE_MENU",ERR=7699,MENU_OSGUI$,OSGUI$; LET OSGUI$=""; LET MENU_OSGUI$=""
7699 RETURN
7700 DATA: 
7701 REM 0 ************ Display Data *************************
7702 IF GUI THEN GOTO GUI_DATA
7704 PRINT 'CF','SF',STBL("FTXT"),
7710 PRINT @(14,1),I0$
7720 PRINT @(13,2),L2$(53,6),@(38),C1$
7730 IF I3$(186,7)<>FILL(7) THEN LET X$=FND$(NUM(I3$(186,7))) ELSE LET X$=FILL(10)
7740 PRINT @(20,4),I2$(18,5),@(48),I2$(7,2),@(67),X$
7750 PRINT @(9,5),L3[2]:M4$,@(41),L3[4]:M4$
7751 IF NEXT_INV$="Y" THEN RETURN
7752 IF I0$=FILL(6) THEN LET Z$=FILL(15) ELSE LET Z$=I0$+"001010001"
7755 DIM D0$(15),D1$(61),G1$(24)
7760 READ (FILE[80],KEY=Z$,DOM=7770)IOL=IPFLENX
7770 READ (FILE[82],KEY=D1$(1,5),DOM=7775)IOL=IPFLFM
7772 LET REC_YES$="Y"; GOTO 7778
7775 LET REC_YES$="N"
7778 IF NEXT_INV$="Y" THEN GOSUB 7704
7780 PRINT 'SF',@(8,7),Z$(7,3),@(30),D1$(1,5),@(36),G1$(1,21),@(65),D1$(30,16),@(67,5),D1$(10,1),; LET FIRST_REC$=D1$(10,1),KEY$=D0$
7785 IF MULTIPLE_FARMS$="Y" THEN PRINT 'SF',@(18,7),Z$(10,2)
7855 RETURN
7900 REM 0 - (DISBOX) 7900-7995
7901 BOX: REM "DISPLAY BOX"
7902 PRINT 'CS','SB',STBL("FBX"),
7905 PRINT 'BACKGR',STBL("FBKG"),STBL("FBX"),'DEFAULT','CS','SB',
7910 PRINT 'BOX'(0,0,79,24),'GS',
7920 PRINT @(0,3),"6",'BOX'(1,3,77,0),@(78,3),"7"
7930 PRINT @(0,6),"6",'BOX'(1,6,77,0),@(78,6),"7"
7980 PRINT @(0,21),"6",'BOX'(1,21,77,0),@(78,21),"7",'GE',
7985 PRINT 'SB',STBL("FTTL"),@(INT((79-LEN(TITLE$))/2),0),TITLE$,
7995 RETURN
8300 REM 0 - (GENOPEN) 8300-8320
8301 GENOPEN: REM "03/21/95 General file OPEN routine"
8305 LET GENOPEN_MSG$="",YSAVE$=YDISABLE$,YDISABLE$="XSJPUD",Y$=""
8310 CALL "GENOPEN.PUB",FILE[ALL],F$,F0,TASK,TPL$,GENOPEN_MSG$,Y$
8311 IF Y$="M" THEN GOTO 9990
8312 IF POS("Unavailable"=GENOPEN_MSG$) THEN LET X9$=GENOPEN_MSG$; GOSUB GENERROR; GOTO 8305
8315 IF GENOPEN_MSG$<>"" THEN LET O7=1,X9$=GENOPEN_MSG$; GOSUB GENERROR; GOTO 9990
8320 LET YDISABLE$=YSAVE$,YSAVE$=""; RETURN
8400 REM 0 - (GENERROR) 8400-8452
8401 GENERROR: REM "02/21/89 - GENERAL ERROR ROUTINE"
8405 IF O7=0 AND X9$="" AND X8$="" THEN LET O7=-3
8410 CALL "GENERROR.PUB",X9$,X8$,ERR,TCB(5),O7,Y$,TCB(10),X1$(1),F$(1),PROGID$,FILE[ALL],YDISABLE$,PGM(-2),X$,X4,MX8,MX9,OSGUI$
8420 ON POS(Y$="XMSLR") GOTO 8450,8452,9990,8452,8490,8499
8450 RETURN
8452 LET SPREC=TCB(14); RESET; PRECISION SPREC; SETERR GENERROR
8453 IF WIND=1 AND LN[9]=0 THEN IF GUI=0 THEN PRINT 'POP'; GOTO 1000 ELSE GOSUB DESTROY_GUI_WINDOW; GOTO 1000
8454 IF Y$="X" THEN GOTO 8470
8456 IF Y$="S" THEN GOTO 8480
8460 REM "8470=BR ON X, 8480=BR ON S, 8490=L PRINT"
8470 IF WIND=1 THEN LET WIND=0; GOTO 2940 ELSE IF TASK$="EL" THEN LET TASK$=""; GOTO 4410 ELSE GOTO 1000
8480 IF TASK$="EL" THEN GOTO 3500 ELSE IF WIND THEN GOTO 2940 ELSE ON P0CHK GOTO 1815,5270
8490 REM 0 - (GENERROR2) 8490-8499
8491 CALL "GENPSCR.PUB"
8495 RETURN
8499 RETRY
9200 REM 9200,2 - (DELETE) 9200-9299
9202 IF WIND=1 OR TASK$="EL" THEN RETURN
9204 LET O7=3; GOSUB GENERROR
9206 IF Y$<>"D" THEN RETURN
9208 GOSUB CLRMSG; LET DELET=1
9210 IF FUN_F3$="Y" THEN GOTO 9232; REM Delete Entire Entry
9212 IF INV_F3$="Y" THEN GOTO 9258; REM Delete All lines for Current Invoice
9214 IF GUI THEN LET O7=10,X9$="Delete All Lines for this Farm ?",X$="N"; GOSUB GENERROR; IF Y$="E" THEN LET X$="F" ELSE LET X$="L" FI; GOTO 9228
9216 PRINT 'SB',@(4,22),"Delete <L>ine only or <F>arm ?"
9218 LET TX0=X0,X0=22,X1=36,X3=3,X4=1,X$=""
9220 GOSUB GENINPUT
9222 IF Y$="U" THEN GOTO 9218
9224 IF POS(X$="LF")=0 THEN LET X9$="<< Enter 'L' or 'F' >>"; GOSUB CLEAR_GLOBAL; GOSUB GENERROR; GOTO 9218
9226 IF GUI=0 THEN PRINT @(4,22),FILL(70)
9228 IF X$="L" THEN GOTO 9246; REM Delete Line Only
9230 IF X$="F" THEN GOTO 9252; REM Delete All lines of Current Farm and Reseq.
9232 REM ------ Delete Entire Entry - FUN_F3$ ----------------------------------
9234 READ (FILE[80],KEY=D0$(1,6),DOM=9236); REM WHOLE ENTRY
9236 LET Z$=KEY(FILE[80],END=9272)
9238 IF Z$(1,6)<>D0$(1,6) THEN GOTO 9272
9240 REMOVE (FILE[80],KEY=Z$)
9242 REMOVE (FILE[10],KEY=Z$(1,9),DOM=9244); REM Delete Invoices
9244 GOTO 9236
9246 REM ------ Delete Line Only and Resequence - 'L' --------------------------
9248 GOSUB DEL_ONE_LINE_ONLY; REM (9600)
9250 GOTO 9270
9252 REM ------ Delete All lines of Current Farm - 'F' -------------------------
9254 GOSUB DEL_RESEQ_FARM; REM (9500)
9256 GOTO 1000
9258 REM ------ Delete all lines for current Invoice - INV_F3$ -----------------
9260 LET INV_TO_DEL$=Y0$
9262 GOSUB DEL_AND_REQ_INV; REM (9300)
9264 GOSUB DEL_AND_REQ_FLOWER; REM (9400)
9266 GOTO 9272
9268 REM -----------------------------------------------------------------------
9270 LET Y$=""; GOTO 1040
9272 LET Y$="X"; GOTO 8452
9300 REM 9300,5 ***** Delete and Resequence Invoices *****
9305 DEL_AND_REQ_INV:
9310 REMOVE (FILE[10],KEY=INV_TO_DEL$,DOM=9345); REM Delete Invoice
9315 READ (FILE[10],END=9345)IOL=IPINVX
9320 IF Y0$(1,6)<>INV_TO_DEL$(1,6) THEN GOTO 9345
9325 REMOVE (FILE[10],KEY=Y0$)
9330 LET Y0$(7,3)=STR(NUM(Y0$(7,3))-1:M3_SEQ$); REM Resequnce
9335 WRITE (FILE[10])IOL=IPINVX
9340 GOTO 9315; REM Read Next Inv. Rec.
9345 RETURN
9400 REM 9400,5 ***** Delete and Resequence Flower Entry Records *****
9405 DEL_AND_REQ_FLOWER:
9410 READ (FILE[80],KEY=INV_TO_DEL$+"",DOM=9415)
9415 READ (FILE[80],END=9490)IOL=IPFLENX
9420 IF D0$(1,9)<>INV_TO_DEL$(1,9) THEN GOTO 9435
9425 REMOVE (FILE[80],KEY=D0$)
9430 GOTO 9415; REM Read Next Flower Rec.
9435 REM ------ Resequence the Following Inv's ---------------------------------
9440 IF D0$(1,6)<>INV_TO_DEL$(1,6) THEN GOTO 9490; REM Chk for Ref. Chg.
9445 REMOVE (FILE[80],KEY=D0$)
9450 LET D0$(7,3)=STR(NUM(D0$(7,3))-1:M3_SEQ$); REM Resequence
9455 WRITE (FILE[80])IOL=IPFLENX
9460 READ (FILE[80],END=9490)IOL=IPFLENX
9465 IF D0$(1,6)<>INV_TO_DEL$(1,6) THEN GOTO 9490; REM Chk for Ref. Chg.
9470 REMOVE (FILE[80],KEY=D0$)
9475 LET D0$(7,3)=STR(NUM(D0$(7,3))-1:M3_SEQ$); REM Resequence
9480 WRITE (FILE[80])IOL=IPFLENX
9485 GOTO 9460; REM Read Next Flower Rec.
9490 RETURN
9500 REM 9500,5 * Delete lines from current Farm and Resequence following Rec's*
9505 DEL_RESEQ_FARM:
9510 GOSUB CURRKEY; REM Get current Key
9515 READ (FILE[80],KNUM=0,KEY=CURRKEY$(1,11)+"",DOM=9520)
9520 READ (FILE[80],END=9595)IOL=IPFLENX
9525 IF D0$(1,11)<>CURRKEY$(1,11) GOTO 9540
9530 REMOVE (FILE[80],KEY=D0$)
9535 GOTO 9520; REM Read Next Flower Rec.
9540 REM -----------------------------------------------------------------------
9545 IF D0$(1,9)<>CURRKEY$(1,9) THEN GOTO 9595; REM Chk for Inv. chg.
9550 REMOVE (FILE[80],KEY=D0$)
9555 LET D0$(10,2)=STR(NUM(D0$(10,2))-1:M5$); REM Reseq. Farm Seq.
9560 WRITE (FILE[80])IOL=IPFLENX
9565 READ (FILE[80],END=9595)IOL=IPFLENX
9570 IF D0$(1,9)<>CURRKEY$(1,9) THEN GOTO 9595; REM Chk for Inv. chg.
9575 REMOVE (FILE[80],KEY=D0$)
9580 LET D0$(10,2)=STR(NUM(D0$(10,2))-1:M5$); REM Reseq. Farm Seq.
9585 WRITE (FILE[80])IOL=IPFLENX
9590 GOTO 9565; REM Read Next Farm Rec.
9595 RETURN
9600 REM 9600,4 * Delete lines from current Farm and Resequence following Rec's*
9604 DEL_ONE_LINE_ONLY:
9608 GOSUB CURRKEY; REM LINE ONLY
9612 LET DEL_REC_COUNT=0
9616 READ (FILE[80],KEY=CURRKEY$,DOM=9696)IOL=IPFLENX
9620 REMOVE (FILE[80],KEY=D0$); REM LINE ONLY
9624 LET DEL_REC_COUNT=DEL_REC_COUNT+1
9628 REM ------ Read & Reseq. --------------------------------------------------
9632 READ (FILE[80],END=9696)IOL=IPFLENX
9636 IF D0$(1,11)<>CODE$(1,11) THEN GOTO 9660
9640 REMOVE (FILE[80],KEY=D0$)
9644 LET DEL_REC_COUNT=DEL_REC_COUNT+1
9648 LET D0$(12,4)=STR(NUM(D0$(12,4))-1:NEW_M5$); REM Resequence
9652 WRITE (FILE[80])IOL=IPFLENX
9656 GOTO 9632; REM Read Next Rec. and Reseq.
9660 REM -----------------------------------------------------------------------
9664 IF DEL_REC_COUNT>1 THEN LET D0$(1,11)=CURRKEY$(1,11); GOTO 9696; REM There was more than one record for this Farm
9668 GOTO 9676
9672 READ (FILE[80],END=9696)IOL=IPFLENX
9676 IF D0$(1,9)<>CURRKEY$(1,9) THEN GOTO 9696; REM Chk for Inv. Chg.
9680 REMOVE (FILE[80],KEY=D0$)
9684 LET D0$(10,2)=STR(NUM(D0$(10,2))-1:M5$); REM Resequence
9688 WRITE (FILE[80])IOL=IPFLENX
9692 GOTO 9672; REM Read Next Rec. and Reseq.
9696 LET D0$(1,11)=CURRKEY$(1,11)
9698 RETURN
9990 REM 0 - (ENDPGM) 9990-9999
9991 GOSUB VERIFY_SPECIFIC_INV_AMTS; REM (6800)
9992 IF WIND=1 AND LN[9]=0 THEN IF GUI=0 THEN PRINT 'POP'; GOTO 1000 ELSE GOSUB DESTROY_GUI_WINDOW; GOTO 1000
9993 IF TASK$="G" THEN GOTO EXITWIND
9994 IF WIND OR TASK$="EL" THEN LET WIND=0; GOTO 2940
9995 IF BARISTA_IND$="Y" THEN RELEASE ELSE RUN O1$; REM "RETURN TO MENU"
9996 LET D0$(1,11)=CURRKEY$(1,11)
9999 END
10000 REM 0 - (GENNUM) 10000-10099
10002 DEF FNNUM$(XX,XX1$)
10003 LET XX$=STR(XX:XX1$,ERR=10005); GOTO 10006
10005 LET XX1=LEN(XX1$); IF POS(XX1$(XX1,1)="-)") THEN LET XX1=XX1-1 FI; LET XX$=FILL(XX1,"*"),XX$=XX$+FILL(LEN(XX1$)-LEN(XX$))
10006 RETURN XX$
10008 FNEND
10010 DEF FNGUINUM$(XX,XX1$,ID)
10015 LET XX$=STR(XX:XX1$,ERR=10020); GOTO 10025
10020 LET XX1=LEN(XX1$); IF POS(XX1$(XX1,1)="-)") THEN LET XX1=XX1-1 FI; LET XX$=FILL(XX1,"*"),XX$=XX$+FILL(LEN(XX1$)-LEN(XX$))
10025 LET TF$=SENDMSG(OSGUI.CHAN,ID,23,0,XX1$)
10030 RETURN CVS(XX$,3)
10035 FNEND
17500 REM 17500,5 "----- GUI Prompts and Box"
17505 GUI_PROMPTS: 
17510 LET OSGUI.SCRNID$="IPFLNTN.ARC",OSGUI.WIND_ID[1]=1,OSGUI.WIND_ID[2]=2,OSGUI.BASE_CONTEXT[2]=-1,OSGUI.CONTEXT_POINTER=-1
17515 LET MSG$=""; CALL "GENGURES.PUB",FILE[ALL],OSGUI$,MSG$; IF CVS(MSG$,3)<>"" THEN LET X9$=MSG$,O7=1; GOSUB GENERROR; GOTO QUIT
17520 CALL "GENGUFNC.PUB::BUILD_MENU_STRINGS",MENUHLP$,MENU1$
17525 CALL "GENGUFNA.PUB::BUILD_ADDTL_CMD_MENU_STRINGS",MENUA$
17530 CALL "GENGUFNC.PUB::BUILD_HLE_MENU",MENUHLE$
17535 REM LET MENU2$=MENU1$+MENUA$+MENUHLE$+MENUHLP$; PRINT (OSGUI.CHAN)'SETMENU',MENU2$
17540 LET MENU2$=MENU1$+MENUA$+MENUHLE$+MENUHLP$; PRINT (OSGUI.CHAN)'CONTEXT'(OSGUI.CUR_CONTEXT[1]),'SETMENU',MENU2$
17545 LET MENU2$=MENU1$+MENUHLP$; PRINT (OSGUI.CHAN)'CONTEXT'(OSGUI.CUR_CONTEXT[2]),'SETMENU',MENU2$; PRINT (OSGUI.CHAN)'CONTEXT'(OSGUI.CUR_CONTEXT[1]); LET MENU1$="",MENUHLP$="",MENUHLE$="",OSGUI.CONTEXT_POINTER=1
17550 GOSUB DISABLE_FIELDS
17555 IF BARISTA_IND$="Y" PRINT (OSGUI.CHAN)'MOVE'(0,0,0)
17560 PRINT (OSGUI.CHAN)'SHOW'(0)
17565 GOSUB GUI_BUTTONS
17570 IF PREV_PGM$="IPACEQEN1" THEN CALL "GENGUPR.PUB::NEXT_PREV_GUI_PGM",OSGUI_IPACEQEN1$,OSGUI$,OSGUI_IPACEQEN1.CONTEXT_POINTER,OSGUI.CONTEXT_POINTER; GOTO 17585
17575 IF STBL("GUIMENU")<>"ON" THEN GOTO 17585
17580 IF STBL("SOFTWARE")="ASCI" THEN IF (O1$="RMMENU" OR O1$="AMMENU") THEN CALL "GENGUPR.PUB::HIDE_MENU",ERR=17585,MENU_OSGUI$,OSGUI$ ELSE GOTO 17585 ELSE IF O1$="RMMENU2" THEN CALL "GENGUPR.PUB::HIDE_MENU",ERR=17585,MENU_OSGUI$,OSGUI$
17585 LET OSGUI_IPFLNTN$=OSGUI$,PREV_PGM$="IPFLNTN"
17590 RETURN
17600 REM 17600,5 "----- GUI PROMPTS2 "
17605 GUI_PROMPTS2: REM *** Display Data for Edit/Append Window ***
17610 PRINT (OSGUI.CHAN)'DISABLE'(0); REM ***
17615 PRINT (OSGUI.CHAN)'CONTEXT'(OSGUI.CUR_CONTEXT[2]),'SHOW'(0); LET OSGUI.CONTEXT_POINTER=2
17620 IF TASK$="EL" THEN LET TITLE$=" Change " ELSE LET TITLE$=" Append "
17625 REM IF D0$(12,4)="0001" OR LN[9]=0 THEN PRINT (OSGUI.CHAN)'ENABLE'(4005) ELSE PRINT (OSGUI.CHAN)'DISABLE'(4005)
17630 PRINT (OSGUI.CHAN)'TITLE'(0,TITLE$)
17635 LET BOX_NUM=NUM(D1$(6,3)),PRICE$=STR(D[0]:M10$)
17640 PRINT (OSGUI.CHAN)'TITLE'(2000,D0$(12,4))
17645 PRINT (OSGUI.CHAN)'TITLE'(4000,D1$(26,2)),'TITLE'(4003,D1$(14,12)); REM Floer # & Tariff No.
17650 LET X=FNLIST(4005,D1$(11,1)," MB",1); REM Box Type
17655 IF WIND=0 THEN READ (FILE[81],KEY=D1$(26,2),KNUM=0,DOM=3700)IOL=IPFLFL
17660 REM PRINT (OSGUI.CHAN)'TITLE'(2010,F1$(6,20))
17665 PRINT (OSGUI.CHAN)'TITLE'(4010,FNGUINUM$(BOX_NUM,M2$,4010)),'TITLE'(4020,FNGUINUM$(D[1],M4$,4020)); REM Boxes & Units
17670 LET X=FNLIST(4030,D1$(9,1),"CDT",1); REM C/D/T List Button
17675 PRINT (OSGUI.CHAN)'TITLE'(4040,FNGUINUM$(D[0],M3$,4040)); REM Unit Price
17680 IF D1$(9,1)<>"T" THEN LET TOT_PRICE=D[1]*D[0],D3[0]=TOT_PRICE; REM Total Line Value = Ln. Units * Ln. Price
17682 IF D1$(9,1)="T" THEN LET TOT_PRICE=D[0],D3[0]=TOT_PRICE; REM Total Line Value = Ln. Units * Ln. Price
17685 PRINT (OSGUI.CHAN)'TITLE'(4050,FNGUINUM$(TOT_PRICE,M10$,4050)); REM Tot. Ln. Price
17690 LET OSGUI.CONTEXT_POINTER=2,GUI_POP=1
17695 RETURN
17700 REM 17700,5 "----- GUI Data"
17705 GUI_DATA: 
17710 PRINT (OSGUI.CHAN)'CLRTITLE'(2030,2040,2050,2060); REM Totals at bottom pf Grid
17715 PRINT (OSGUI.CHAN)'CLRTITLE'(4070,4072,4075,4080,4085,4090,4100,4120,4130,4140,2030,2040,2050,2060)
17720 PRINT (OSGUI.CHAN)'TITLE'(4000,I0$)
17725 PRINT (OSGUI.CHAN)'TITLE'(4003,FNNUM$(L3[0],M4$)); REM Entry Value
17730 PRINT (OSGUI.CHAN)'TITLE'(4005,FNNUM$(NUM(I3$(155,4)),"000")); REM No. of Inv's
17735 REM PRINT (OSGUI.CHAN)'TITLE'(2000,L2$(53,6))
17740 REM PRINT (OSGUI.CHAN)'TITLE'(2010,C1$)
17745 PRINT (OSGUI.CHAN)'TITLE'(4010,I2$(18,5))
17750 PRINT (OSGUI.CHAN)'TITLE'(4020,I2$(7,2))
17755 IF I3$(186,7)<>FILL(7) THEN LET B$=FND$(NUM(I3$(186,7))) ELSE LET B$=FILL(10)
17760 PRINT (OSGUI.CHAN)'TITLE'(4030,B$)
17765 LET WEIGHT$=STR(L3[2]:M4$); PRINT (OSGUI.CHAN)'TITLE'(4040,WEIGHT$)
17770 LET CHARGE$=STR(L3[4]:M4$); PRINT (OSGUI.CHAN)'TITLE'(4050,CHARGE$)
17775 IF NEXT_INV$="Y" THEN RETURN
17780 LET A=FNCHECK(4060,D1$(10,1)); REM Xfer Ind.
17785 IF I0$=FILL(6) THEN LET Z$=FILL(15) ELSE LET Z$=I0$+"001010001"
17790 REM DIM D1$(61),D[1],D2$(12),D3[1],G1$(24); REM DIM D0$(15),D1$(61),G1$(24)
17795 DIM D1$(61),D[1],D3[1],G1$(24); REM DIM D0$(15),D1$(61),G1$(24)
17800 READ (FILE[80],KEY=Z$,DOM=17820)IOL=IPFLENX
17805 READ (FILE[10],KNUM=0,KEY=D0$(1,9),DOM=17810)IOL=IPINVX
17810 REM READ (FILE[11],KNUM=0,KEY=D0$(1,6)+"0001",DOM=17779)IOL=M_IPAWBX
17815 REM READ (FILE[11],KNUM=0,KEY=D0$(1,6)+"0002",DOM=17780)IOL=H_IPAWBX
17820 IF M_AB1$(18,8)<>FILL(8) THEN LET AWB_BL_QTY$=M_AB1$(18,8),AWB_BL_UNIT$=M_AB1$(26,5) ELSE LET AWB_BL_QTY$=H_AB1$(18,8),AWB_BL_UNIT$=H_AB1$(26,5)
17825 LET AWB_BL_QTY$=STR(D3[1]:"########"),AWB_BL_UNIT$=D2$(7,5),AWB_BL_NON_AMS$=D2$(12,1); REM Get them from Flower Entry Record
17830 READ (FILE[82],KEY=D1$(1,5),DOM=17835)IOL=IPFLFM
17835 LET A=FNCHECK(4060,D1$(10,1)); REM Xfer Ind.
17840 PRINT (OSGUI.CHAN)'TITLE'(4070,D0$(7,3)); REM Inv. Seq. #
17845 PRINT (OSGUI.CHAN)'TITLE'(4072,FNGUINUM$(Y1[0],M11_INV_VAL$,4072)); REM Inv. Amt.
17850 IF MULTIPLE_FARMS$="Y" THEN PRINT (OSGUI.CHAN)'TITLE'(4075,D0$(10,2)); REM Farm Seq. #
17855 PRINT (OSGUI.CHAN)'TITLE'(4080,D1$(1,5)); REM Farm Code
17860 REM PRINT (OSGUI.CHAN)'TITLE'(2020,G1$(1,21))
17865 PRINT (OSGUI.CHAN)'TITLE'(4085,D1$(46,16)); REM Master AWB/BL #
17870 PRINT (OSGUI.CHAN)'TITLE'(4090,D1$(30,16)); REM House AWB/BL #
17875 PRINT (OSGUI.CHAN)'TITLE'(4100,D2$(1,6)),'TITLE'(4120,FNGUINUM$(NUM(AWB_BL_QTY$),"########",4120)),'TITLE'(4130,AWB_BL_UNIT$); REM Consignee, Qty & UoM
17880 LET S=FNLIST(4140,AWB_BL_NON_AMS$,"NY",1); REM N-AMS Ind.
17885 LET FIRST_REC$=D1$(10,1),KEY$=D0$
17890 RETURN
18000 REM 18000,5 "----- Disable Fields"
18005 DISABLE_FIELDS: 
18010 IF GUI THEN PRINT (OSGUI.CHAN)'ENABLE'(4000,14000),'DISABLE'(4010,14010,4020,14020,4030,4040,4050,4060,4070,4072,4075,4080,14080,4085,4090,4100,14100,4120,4130,4140,7000,8001,8002,8003,8004,8005,8006,9000,9010,9020,9030,9040,9050,9060,-20500)
18015 RETURN
18100 REM 18100,2 "----- Enable Fields"
18102 ENABLE_FIELDS: 
18104 IF GUI THEN PRINT (OSGUI.CHAN)'DISABLE'(4000,14000,4010,14010,4020,14020,4030,4040,4050,4060,7000,8001,8002,8003,8004,8005,8006,9000,9010,9020,9030,9040,9050,9060,-20500),'ENABLE'(4070,4072,4075,4080,14080,4085,4090,4100,14100,4120,4130,4140)
18106 IF MULTIPLE_FARMS$="Y" AND D0$(10,2)<>"01" THEN PRINT (OSGUI.CHAN)'DISABLE'(4070,4072,4085,4090,4100,14100,4120,4130,4140) ELSE PRINT (OSGUI.CHAN)'ENABLE'(4070,4072,4085,4090,4100,4120,4130,4140); REM When doing the Next Farm Seq. for an Invoice, Disable All Fields excep the Farm Seq. # & the Fam ID.
18108 IF I3$(174,1)<>"Y" AND ACE_SINGLE_CONSG_INV$<>"Y" THEN PRINT (OSGUI.CHAN)'DISABLE'(4100,14100); REM When these two options are set to 'N', use the Consig. Code from Q.E. Sec I and default it to all Invoices of this Flower Entry.
18110 RETURN
18120 REM 18120,2  ***** ENABLE TOP FIELDS *****
18122 ENABLE_TOP_FIELDS: 
18124 PRINT (OSGUI.CHAN)'ENABLE'(4003,4005,4010,14010,4010,4020,14020,4030,4040,4050,4060),'DISABLE'(4000,14000,4070,4075,4080,14080,4085,4090,4100,14100,4120,4130,4140,7000,9000,9010,9020,9030,9040,9050,9060,8001,8002,8003,8004,8005,8006)
18126 IF KEEP_FLOW_ENT$="Y" THEN PRINT (OSGUI.CHAN)'ENABLE'(4060) ELSE PRINT (OSGUI.CHAN)'DISABLE'(4060); REM Xfer Ind.
18128 RETURN
18130 REM 0 ***** ENABLE MIDDLE FIELDS *****
18132 ENABLE_MIDDLE_FIELDS: 
18134 PRINT (OSGUI.CHAN)'ENABLE'(4070,4072,4075,4080,14080,4085,4090,4100,14100,4120,4130,4140),'DISABLE'(4000,14000,4003,4005,4010,14010,4020,14020,4030,4040,4050,4060,7000,9000,9010,9020,9030,9040,9050,9060,8001,8002,8003,8004,8005,8006)
18136 IF MULTIPLE_FARMS$="Y" THEN PRINT (OSGUI.CHAN)'ENABLE'(4075) ELSE PRINT (OSGUI.CHAN)'DISABLE'(4075); REM Farm Seq. #
18137 IF I3$(174,1)<>"Y" AND ACE_SINGLE_CONSG_INV$<>"Y" THEN PRINT (OSGUI.CHAN)'DISABLE'(4100,14100); REM When these two options are set to 'N', use the Consig. Codefrom Q.E. Sec I and default it to all Invoices of this Flower Entry. 
18138 RETURN
18140 REM 0 ***** ENABLE GRID FIELDS *****
18142 ENABLE_GRID_FIELDS: 
18144 PRINT (OSGUI.CHAN)'ENABLE'(7000,9000,9010,9020,9030,9040,9050,9060,8001,8002,8003,8004,8005,8006),'DISABLE'(4000,14000,4003,4005,4010,14010,4020,14020,4030,4040,4050,4060,4070,4072,4075,4080,14080,4085,4090,4100,14100,4120,4130,4140)
18146 RETURN
18200 REM 18200,5 "----- Clear GUI Global"
18205 CLEAR_GLOBAL: 
18210 IF GUI THEN LET DUMMY$=STBL("!CLEAR","DESTID",ERR=18215)
18215 RETURN
18400 REM 18400,5 "----- Destroy Window"
18405 DESTROY_GUI_WINDOW: 
18410 PRINT (OSGUI.CHAN)'HIDE'(0),'CONTEXT'(OSGUI.CUR_CONTEXT[1]),'ENABLE'(0); LET OSGUI.CONTEXT_POINTER=1,GUI_POP=0
18415 RETURN
18500 REM 18500,5 "----- Setup Button Keys for HLE's
18505 GUI_BUTTONS: 
18510 IF GUI THEN DIM BUTTON_KEYS$[1:7,1:2]; LET BUTTON_KEYS$[1,1]="9000",BUTTON_KEYS$[1,2]="A",BUTTON_KEYS$[2,1]="9010",BUTTON_KEYS$[2,2]="C",BUTTON_KEYS$[3,1]="9020",BUTTON_KEYS$[3,2]="N",BUTTON_KEYS$[4,1]="9030",BUTTON_KEYS$[4,2]="T",BUTTON_KEYS$[5,1]="9040",BUTTON_KEYS$[5,2]="E",BUTTON_KEYS$[6,1]="9050",BUTTON_KEYS$[6,2]="G",BUTTON_KEYS$[7,1]="9060",BUTTON_KEYS$[7,2]="F"
18515 RETURN
18700 REM 0 - (GENCONTEXT) 18700-18708
18702 DEF FNCONTEXT(X)
18704 LET XX$=FIN(X),AVAILCONT=DEC(XX$(3,2))
18706 RETURN AVAILCONT
18708 FNEND
18800 REM 0 - (GENCHECK) 18800-18850
18810 DEF FNCHECK(ID,PARAM$)
18820 IF LEN(PARAM$)<1 THEN PRINT (OSGUI.CHAN)'UNCHECK'(ID) ELSE IF PARAM$(1,1)="Y" THEN PRINT (OSGUI.CHAN)'CHECK'(ID) ELSE PRINT (OSGUI.CHAN)'UNCHECK'(ID)
18830 RETURN 1
18840 FNEND
18900 REM 0 - (GENLIST) 18900-18950
18910 DEF FNLIST(ID,PARAM$,LIST$,LEN)
18920 LET XX=POS(PARAM$=LIST$); IF XX=0 THEN PRINT (OSGUI.CHAN)'LISTUNSEL'(ID,0) ELSE LET XX=(XX-1)/LEN; PRINT (OSGUI.CHAN)'LISTSEL'(ID,XX)
18930 RETURN 1
18940 FNEND